{"version":3,"file":"static/js/751.68b3c115.chunk.js","mappings":"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","sources":["components/Iconify/index.js","constants/images.js","features/Cashier/components/Footer.js","features/Cashier/components/StaffInfo.js","constants/OrderItemStatus.js","features/Cashier/components/AppOrderDetail/OrderItemAvatar.js","features/Cashier/components/AppOrderDetail/OrderItemInfoNEW.js","features/Cashier/components/AppOrderDetail/OrderItemInfoOTHER.js","features/Cashier/components/AppOrderDetail/DeleteOrderItem.js","features/Cashier/components/AppOrderDetail/DeleteOrderItemStockOut.js","features/Cashier/components/AppOrderDetail/AppOrderDetail.js","features/Cashier/components/MenuBar.js","features/Cashier/components/ModalOrder.js","features/Cashier/components/TabTableAndMenu.js","features/Cashier/components/AppSearchProduct.js","features/Cashier/components/ModalChangeTable.js","features/Cashier/components/ModalMergeTable.js","features/Cashier/components/AppTableList.js","features/Cashier/components/AppProductList.js","constants/BillStatus.js","features/Cashier/components/ModalDetailBill.js","features/Cashier/components/AppBillHistoryList.js","features/Cashier/components/BodyTableAndMenu.js","features/Cashier/components/TabOrderItems.js","features/Cashier/components/BodyOrderItemsEmpty.js","features/Cashier/components/ModalBill.js","features/Cashier/index.js","features/Cashier/loading/Loading.js","services/socketService.js","utils/Helper.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport { forwardRef } from 'react'\r\n// icons\r\nimport { Icon } from '@iconify/react'\r\n// @mui\r\nimport { Box } from '@mui/material'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box\r\n    ref={ref}\r\n    component={Icon}\r\n    icon={icon}\r\n    sx={{ width, height: width, ...sx }}\r\n    {...other}\r\n  />\r\n))\r\n\r\nIconify.propTypes = {\r\n  sx: PropTypes.object,\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n}\r\n\r\nexport default Iconify\r\n","import loadingLogo from 'assets/images/pink-lotus-icon.png'\r\nimport loginLogo from 'assets/images/pink-lotus-icon-login-logo.png'\r\nimport notFound from 'assets/images/oops-404-error-with-broken-robot.png'\r\n\r\nconst Images = {\r\n  LOGIN_LOGO: loginLogo,\r\n  LOADING_LOGO: loadingLogo,\r\n  NOT_FOUND: notFound,\r\n}\r\n\r\nexport default Images\r\n","import React from 'react'\r\nimport { Typography, Stack, Box } from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        // height: '3vh',\r\n        height: '35px',\r\n        paddingTop: '8px',\r\n        // pt: '4px',\r\n        position: 'fixed',\r\n        backgroundColor: '#7266ba',\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Iconify\r\n          icon={'ic:baseline-phone-callback'}\r\n          color=\"white\"\r\n          width={20}\r\n          height={50}\r\n          sx={{\r\n            mr: 1,\r\n          }}\r\n        />\r\n        <Typography\r\n          sx={{ color: 'white', fontFamily: 'initial', fontSize: 'small' }}\r\n        >\r\n          Hỗ trợ: 1900 1009\r\n        </Typography>\r\n        <Iconify\r\n          icon={'mdi:address-marker'}\r\n          color=\"white\"\r\n          width={20}\r\n          height={50}\r\n          sx={{\r\n            mr: 1,\r\n            ml: 5,\r\n          }}\r\n        />\r\n        <Typography\r\n          sx={{ color: 'white', fontFamily: 'initial', fontSize: 'small' }}\r\n        >\r\n          Địa chỉ liên hệ: 28 Nguyễn Tri Phương{' '}\r\n        </Typography>\r\n        <Iconify\r\n          icon={'ion:mail-open-outline'}\r\n          color=\"white\"\r\n          width={20}\r\n          height={50}\r\n          sx={{\r\n            mr: 1,\r\n            ml: 5,\r\n          }}\r\n        />\r\n        <Typography\r\n          sx={{ color: 'white', fontFamily: 'initial', fontSize: 'small' }}\r\n        >\r\n          white.lotus.restaurant.hbt@gmail.com\r\n        </Typography>{' '}\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button } from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nexport default function StaffInfo({ fullName }) {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      sx={{\r\n        position: 'absolute',\r\n        height: '24px',\r\n        mt: '8px',\r\n        // ml: 41,\r\n        right: '35px !important',\r\n        borderRadius: '15px',\r\n        backgroundColor: '#7266ba',\r\n        color: '#F9FAFB',\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n          backgroundColor: '#F9FAFB',\r\n          color: '#7266ba',\r\n        },\r\n      }}\r\n    >\r\n      <Iconify\r\n        icon={'mdi:calendar-user'}\r\n        width={20}\r\n        height={50}\r\n        sx={{\r\n          mr: 1,\r\n        }}\r\n      />\r\n      {fullName}\r\n    </Button>\r\n  )\r\n}\r\n","export const OrderItemStatus = Object.freeze({\r\n  NEW: { status: 'NEW', statusValue: 'Mới' },\r\n  UPDATE: { status: 'UPDATE', statusValue: 'Cập nhật' },\r\n  COOKING: { status: 'COOKING', statusValue: 'Đang làm' },\r\n  WAITER: { status: 'WAITER', statusValue: 'Chờ cung ứng' },\r\n  DELIVERY: { status: 'DELIVERY', statusValue: 'Đã giao' },\r\n  STOCK_OUT: { status: 'STOCK_OUT', statusValue: 'Hết hàng' },\r\n  DONE: { status: 'DONE', statusValue: 'Hoàn tất' },\r\n})\r\n","import { Grid } from '@mui/material'\r\n\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport 'layouts/sweetalert.css'\r\n\r\nimport Box from '@mui/material/Box'\r\n\r\nimport { COUDINARY } from 'constants/global'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledProductImg = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n  borderRadius: '12px',\r\n})\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderItemAvatar({\r\n  orderItem,\r\n  index,\r\n  handleOpenEditModal,\r\n}) {\r\n  return (\r\n    <Grid item xs={2} md={2} lg={2}>\r\n      <Box\r\n        sx={{\r\n          pt: '100%',\r\n          position: 'relative',\r\n          top: 0,\r\n          // cursor: 'pointer',\r\n        }}\r\n        // onClick={() => {\r\n        //   handleOpenEditModal(orderItem, index)\r\n        // }}\r\n      >\r\n        <StyledProductImg\r\n          alt={orderItem.productTitle}\r\n          src={\r\n            COUDINARY.url +\r\n            '/' +\r\n            COUDINARY.SCALE_IMAGE_120_120 +\r\n            '/' +\r\n            orderItem.productAvatar.fileFolder +\r\n            '/' +\r\n            orderItem.productAvatar.fileName\r\n          }\r\n        />\r\n      </Box>\r\n      {/* <>\r\n                {\r\n                    orderItem.status == OrderItemStatus.NEW.statusValue ? (\r\n                        <Box\r\n                            sx={{\r\n                                pt: '100%',\r\n                                position: 'relative',\r\n                                top: 0,\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => {\r\n                                handleOpenEditModal(orderItem, index)\r\n                            }}\r\n                        >\r\n                            <StyledProductImg\r\n                                alt={orderItem.productTitle}\r\n                                src={\r\n                                    COUDINARY.url +\r\n                                    '/' +\r\n                                    COUDINARY.SCALE_IMAGE_180_180 +\r\n                                    '/' +\r\n                                    orderItem.productAvatar.fileFolder +\r\n                                    '/' +\r\n                                    orderItem.productAvatar.fileName\r\n                                }\r\n                            />\r\n                        </Box>\r\n                    ) : (\r\n                        <Box\r\n                            sx={{\r\n                                pt: '100%',\r\n                                position: 'relative',\r\n                                top: 0,\r\n                            }}\r\n                        >\r\n                            <StyledProductImg\r\n                                alt={orderItem.productTitle}\r\n                                src={\r\n                                    COUDINARY.url +\r\n                                    '/' +\r\n                                    COUDINARY.SCALE_IMAGE_180_180 +\r\n                                    '/' +\r\n                                    orderItem.productAvatar.fileFolder +\r\n                                    '/' +\r\n                                    orderItem.productAvatar.fileName\r\n                                }\r\n                            />\r\n                        </Box>\r\n                    )\r\n                }\r\n\r\n            </> */}\r\n    </Grid>\r\n  )\r\n}\r\n","// @mui\r\nimport { Typography, Stack, TextField } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\n// SweetAlert\r\nimport 'layouts/sweetalert.css'\r\n\r\n// Toast\r\n\r\nimport Button from '@mui/material/Button'\r\n\r\nimport Iconify from 'components/Iconify'\r\nimport Helper from 'utils/Helper'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  paddingTop: '4px',\r\n  bgcolor: 'background.paper',\r\n  borderRadius: '12px',\r\n  marginBottom: '1px',\r\n  border: '1px solid white',\r\n  '&:hover': {\r\n    border: '1px solid blue',\r\n  },\r\n}\r\nconst styleReadonly = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  paddingTop: '4px',\r\n  bgcolor: 'background.paper',\r\n  borderRadius: '12px',\r\n  marginBottom: '1px',\r\n  border: '1px solid white',\r\n}\r\nconst StyledProductImg = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n  borderRadius: '12px',\r\n})\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderItemInfoNEW({\r\n  index,\r\n  item,\r\n  handleChangeQuantity,\r\n  handleDecreaseQuantity,\r\n  handleIncreaseQuantity,\r\n}) {\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Typography\r\n          id=\"transition-modal-title\"\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: '#53382c',\r\n            lineHeight: 0.6,\r\n            textTransform: 'uppercase',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            fontFamily: 'serif',\r\n            mt: 1,\r\n          }}\r\n        >\r\n          {item.productTitle}\r\n        </Typography>\r\n      </Stack>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ paddingTop: '5px' }}\r\n      >\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: '#53382c',\r\n            fontSize: '15px',\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          {`Giá: ${Helper.formatCurrencyToVND(item.price)}`}\r\n        </Typography>\r\n\r\n        <TextField\r\n          value={item.quantity}\r\n          disabled\r\n          variant=\"filled\"\r\n          InputProps={{\r\n            disableUnderline: true,\r\n          }}\r\n          inputProps={{\r\n            pattern: '^[0-9]+$',\r\n          }}\r\n          sx={{\r\n            position: 'absolute',\r\n            ml: '230px',\r\n            input: {\r\n              color: '#53382c',\r\n              backgroundColor: 'white',\r\n              fontSize: '17px',\r\n              padding: ' 0px',\r\n              fontWeight: 500,\r\n              fontFamily: 'sans-serif',\r\n              textAlign: 'center',\r\n              width: '100px',\r\n            },\r\n          }}\r\n          onChange={(e) => {\r\n            handleChangeQuantity(e, index, item)\r\n          }}\r\n        />\r\n\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            mr: '25px',\r\n            color: '#53382c',\r\n            fontSize: '17px',\r\n            fontWeight: 600,\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          {Helper.formatCurrencyToVND(item.amount)}\r\n        </Typography>\r\n\r\n        {item.quantity <= 1 ? (\r\n          <Button\r\n            disabled\r\n            sx={{\r\n              color: '#f42525',\r\n              cursor: 'pointer',\r\n              ml: '225px',\r\n              borderRadius: '50%',\r\n              maxWidth: '25px',\r\n              minWidth: '25px',\r\n              maxHeight: '25px',\r\n              minHeight: '25px',\r\n              border: '1px solid gray',\r\n              // backgroundColor: '#0008100a',\r\n              position: 'absolute',\r\n              padding: 0,\r\n              '&:hover': {\r\n                backgroundColor: '#ff563014',\r\n                border: 'none',\r\n              },\r\n            }}\r\n            onClick={() => {\r\n              handleDecreaseQuantity(index, item)\r\n            }}\r\n          >\r\n            <Iconify icon=\"ic:outline-minus\" />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            sx={{\r\n              color: '#f42525',\r\n              cursor: 'pointer',\r\n              ml: '225px',\r\n              borderRadius: '50%',\r\n              maxWidth: '25px',\r\n              minWidth: '25px',\r\n              maxHeight: '25px',\r\n              minHeight: '25px',\r\n              border: '1px solid gray',\r\n              // backgroundColor: '#0008100a',\r\n              position: 'absolute',\r\n              padding: 0,\r\n              '&:hover': {\r\n                backgroundColor: '#ff563014',\r\n                border: 'none',\r\n              },\r\n            }}\r\n            onClick={() => {\r\n              handleDecreaseQuantity(index, item)\r\n            }}\r\n          >\r\n            <Iconify icon=\"ic:outline-minus\" />\r\n          </Button>\r\n        )}\r\n\r\n        {item.quantity < 100 ? (\r\n          <Button\r\n            sx={{\r\n              color: '#0dbd16',\r\n              cursor: 'pointer',\r\n              ml: '310px',\r\n              borderRadius: '50%',\r\n              maxWidth: '25px',\r\n              minWidth: '25px',\r\n              maxHeight: '25px',\r\n              minHeight: '25px',\r\n              border: '1px solid gray',\r\n              position: 'absolute',\r\n              padding: 0,\r\n              '&:hover': {\r\n                backgroundColor: '##cedfcf',\r\n                border: 'none',\r\n              },\r\n            }}\r\n            onClick={() => {\r\n              handleIncreaseQuantity(index, item)\r\n            }}\r\n          >\r\n            <Iconify icon=\"ic:baseline-plus\" />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled\r\n            sx={{\r\n              color: '#0dbd16',\r\n              cursor: 'pointer',\r\n              ml: '310px',\r\n              borderRadius: '50%',\r\n              maxWidth: '25px',\r\n              minWidth: '25px',\r\n              maxHeight: '25px',\r\n              minHeight: '25px',\r\n              border: '1px solid gray',\r\n              position: 'absolute',\r\n              padding: 0,\r\n              '&:hover': {\r\n                backgroundColor: '##cedfcf',\r\n                border: 'none',\r\n              },\r\n            }}\r\n            onClick={() => {\r\n              handleIncreaseQuantity(index, item)\r\n            }}\r\n          >\r\n            <Iconify icon=\"ic:baseline-plus\" />\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Iconify icon=\"material-symbols:note-outline\" sx={{ color: 'gray' }} />\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: '#53382c',\r\n            fontSize: '12px',\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          {item.note ? item.note : 'Không có ghi chú'}\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  )\r\n}\r\n","// @mui\r\nimport { Typography, Stack, TextField } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\n// SweetAlert\r\nimport 'layouts/sweetalert.css'\r\n\r\nimport Iconify from 'components/Iconify'\r\nimport Helper from 'utils/Helper'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  paddingTop: '4px',\r\n  bgcolor: 'background.paper',\r\n  borderRadius: '12px',\r\n  marginBottom: '1px',\r\n  border: '1px solid white',\r\n  '&:hover': {\r\n    border: '1px solid blue',\r\n  },\r\n}\r\nconst styleReadonly = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  paddingTop: '4px',\r\n  bgcolor: 'background.paper',\r\n  borderRadius: '12px',\r\n  marginBottom: '1px',\r\n  border: '1px solid white',\r\n}\r\nconst StyledProductImg = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n  borderRadius: '12px',\r\n})\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderItemInfoOTHER({ index, item }) {\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Typography\r\n          id=\"transition-modal-title\"\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: '#53382c',\r\n            lineHeight: 0.6,\r\n            textTransform: 'uppercase',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            fontFamily: 'serif',\r\n            mt: 1,\r\n          }}\r\n        >\r\n          {item.productTitle}\r\n        </Typography>\r\n      </Stack>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ paddingTop: '5px' }}\r\n      >\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: '#53382c',\r\n            fontSize: '15px',\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          {`Giá: ${Helper.formatCurrencyToVND(item.price)}`}\r\n        </Typography>\r\n\r\n        <TextField\r\n          value={item.quantity}\r\n          disabled\r\n          variant=\"filled\"\r\n          InputProps={{\r\n            disableUnderline: true,\r\n          }}\r\n          inputProps={{\r\n            pattern: '^[0-9]+$',\r\n          }}\r\n          sx={{\r\n            position: 'absolute',\r\n            ml: '230px',\r\n            input: {\r\n              color: '#53382c',\r\n              backgroundColor: 'white',\r\n              fontSize: '17px',\r\n              padding: ' 0px',\r\n              fontWeight: 500,\r\n              fontFamily: 'sans-serif',\r\n              textAlign: 'center',\r\n              width: '100px',\r\n            },\r\n          }}\r\n        />\r\n\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            mr: '25px',\r\n            color: '#53382c',\r\n            fontSize: '17px',\r\n            fontWeight: 600,\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          {Helper.formatCurrencyToVND(item.amount)}\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Iconify icon=\"material-symbols:note-outline\" sx={{ color: 'gray' }} />\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: '#53382c',\r\n            fontSize: '12px',\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          {item.note ? item.note : 'Không có ghi chú'}\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  )\r\n}\r\n","\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport 'layouts/sweetalert.css'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledProductImg = styled('img')({\r\n    top: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n    position: 'absolute',\r\n    borderRadius: '12px',\r\n})\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DeleteOrderItem({ index, item, handleClickDeleteItem }) {\r\n    return (\r\n        <Iconify\r\n            icon={'material-symbols:close'}\r\n            position=\"absolute\"\r\n            top=\"2px\"\r\n            right=\"10px\"\r\n            bgcolor=\"white\"\r\n            color=\"#5A5A72\"\r\n            width={25}\r\n            padding={0.4}\r\n            cursor=\"pointer\"\r\n            sx={{\r\n                '&:hover': {\r\n                    color: '#131318',\r\n                    bgcolor: '#EBEBEF',\r\n                    border: '1px solid #B9B9c6',\r\n                },\r\n            }}\r\n            onClick={() => {\r\n                handleClickDeleteItem(index, item)\r\n            }}\r\n        />\r\n    )\r\n}","import 'layouts/sweetalert.css'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nexport default function DeleteOrderItemStockOut({\r\n  index,\r\n  item,\r\n  handleClickDeleteItemStockOut,\r\n}) {\r\n  return (\r\n    <Iconify\r\n      icon={'material-symbols:close'}\r\n      position=\"absolute\"\r\n      top=\"2px\"\r\n      right=\"10px\"\r\n      bgcolor=\"white\"\r\n      // color=\"#5A5A72\"\r\n      color=\"red\"\r\n      width={25}\r\n      padding={0.4}\r\n      cursor=\"pointer\"\r\n      sx={{\r\n        border: 'solid 1px red',\r\n        borderRadius: '2px',\r\n        '&:hover': {\r\n          // color: '#131318',\r\n          // bgcolor: '#EBEBEF',\r\n          // border: '1px solid #B9B9c6',\r\n          color: '#fff',\r\n          bgcolor: 'red',\r\n          border: '1px solid #fff',\r\n        },\r\n      }}\r\n      onClick={() => {\r\n        handleClickDeleteItemStockOut(index, item)\r\n      }}\r\n    />\r\n  )\r\n}\r\n","// @mui\r\nimport { Typography, Grid, Stack } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\n// SweetAlert\r\nimport Swal from 'sweetalert2'\r\nimport 'layouts/sweetalert.css'\r\n\r\n// Toast\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Box from '@mui/material/Box'\r\n\r\nimport Iconify from 'components/Iconify'\r\nimport { OrderItemStatus } from 'constants/OrderItemStatus'\r\n\r\nimport OrderItemAvatar from './OrderItemAvatar'\r\nimport OrderItemInfoNEW from './OrderItemInfoNEW'\r\nimport OrderItemInfoOTHER from './OrderItemInfoOTHER'\r\nimport DeleteOrderItem from './DeleteOrderItem'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  setTotalAmount,\r\n  deleteUpdateOrderItem,\r\n  deleteItemStockOut,\r\n  increaseQuantityOrderItem,\r\n  decreaseQuantityOrderItem,\r\n} from 'app/orderItemSlice'\r\n\r\nimport DeleteOrderItemStockOut from './DeleteOrderItemStockOut'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  position: 'relative',\r\n  width: '100%',\r\n\r\n  paddingTop: '4px',\r\n  bgcolor: 'background.paper',\r\n  // borderRadius: '12px',\r\n  marginBottom: '1px',\r\n  border: '1px solid white',\r\n  '&:hover': {\r\n    border: '1px solid blue',\r\n  },\r\n}\r\nconst styleReadonly = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  paddingTop: '4px',\r\n  bgcolor: 'background.paper',\r\n  // borderRadius: '12px',\r\n  marginBottom: '1px',\r\n  border: '1px solid white',\r\n}\r\nconst StyledProductImg = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n  borderRadius: '12px',\r\n})\r\n\r\nexport default function AppOrderDetail({\r\n  handleOpenEditModal,\r\n  handleCloseBill,\r\n  closeTable,\r\n  ...other\r\n}) {\r\n  const dispatch = useDispatch()\r\n\r\n  const baseData = useSelector((state) => state.baseData.data)\r\n  const currentTable = baseData.currentTable\r\n\r\n  const orderItemData = useSelector((state) => state.orderItemData.data)\r\n\r\n  const currentOrderItemsdata = orderItemData.currentOrderItemsdata\r\n  const updateOrderItemsdata = orderItemData.updateOrderItemsdata\r\n\r\n  let orderItemsData = currentOrderItemsdata.concat(updateOrderItemsdata)\r\n\r\n  const handleDecreaseQuantity = (index, orderItem) => {\r\n    dispatch(decreaseQuantityOrderItem(orderItem))\r\n    dispatch(setTotalAmount())\r\n  }\r\n  const handleIncreaseQuantity = (index, orderItem) => {\r\n    dispatch(increaseQuantityOrderItem(orderItem))\r\n    dispatch(setTotalAmount())\r\n  }\r\n  const handleChangeQuantity = (e, index, orderItem) => {\r\n    if (e.target.value >= 1 && e.target.value <= 100) {\r\n      orderItem.quantity = Number(e.target.value)\r\n    }\r\n  }\r\n\r\n  const handleClickDeleteItem = (index, orderItem) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        title: 'titleDeleteItem',\r\n      },\r\n    })\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: `Chắc chắn muốn xóa \"${orderItem.productTitle}\"`,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Chấp nhận',\r\n        cancelButtonText: `Hủy bỏ`,\r\n      })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          handleDeleteOrderItem(index)\r\n          toast.success(`${orderItem.productTitle} xóa thành công`)\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDeleteOrderItem = (indexInOrderItems) => {\r\n    dispatch(deleteUpdateOrderItem(indexInOrderItems))\r\n\r\n    dispatch(setTotalAmount())\r\n  }\r\n\r\n  const handleClickDeleteItemStockOut = (index, orderItem) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        title: 'titleDeleteItem',\r\n      },\r\n    })\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: `Chắc chắn muốn xóa \"${orderItem.productTitle}\"`,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Chấp nhận',\r\n        cancelButtonText: `Hủy bỏ`,\r\n      })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          const obj = {\r\n            orderItemId: orderItem.id,\r\n          }\r\n\r\n          dispatch(deleteItemStockOut(obj))\r\n            .unwrap()\r\n            .then(() => {\r\n              dispatch(setTotalAmount())\r\n\r\n              // const obj = {\r\n              //   tableId: currentTable.id,\r\n              //   status: EnumStatus.EMPTY.status,\r\n              //   statusValue: EnumStatus.EMPTY.statusValue,\r\n              // }\r\n\r\n              // const updateTableStatusAction = updateTableStatus(obj)\r\n              // dispatch(updateTableStatusAction)\r\n\r\n              // handleCloseBill()\r\n              // closeTable()\r\n            })\r\n\r\n          toast.success(`${orderItem.productTitle} xóa thành công`)\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {orderItemsData.length > 0 &&\r\n        orderItemsData.map((item, index) =>\r\n          item.status === OrderItemStatus.NEW.status ? (\r\n            <Box sx={style} key={index}>\r\n              <DeleteOrderItem\r\n                item={item}\r\n                index={index}\r\n                handleClickDeleteItem={handleClickDeleteItem}\r\n              />\r\n\r\n              <Grid container spacing={1}>\r\n                <OrderItemAvatar\r\n                  orderItem={item}\r\n                  index={index}\r\n                  handleOpenEditModal={handleOpenEditModal}\r\n                />\r\n\r\n                <Grid\r\n                  item\r\n                  xs={10}\r\n                  md={10}\r\n                  lg={10}\r\n                  sx={{\r\n                    textAlign: 'justify',\r\n                    top: 0,\r\n                  }}\r\n                >\r\n                  <OrderItemInfoNEW\r\n                    item={item}\r\n                    index={index}\r\n                    handleChangeQuantity={handleChangeQuantity}\r\n                    handleDecreaseQuantity={handleDecreaseQuantity}\r\n                    handleIncreaseQuantity={handleIncreaseQuantity}\r\n                  />\r\n\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <Iconify\r\n                      icon=\"fluent-mdl2:status-circle-checkmark\"\r\n                      sx={{ color: 'gray' }}\r\n                    />\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      sx={{\r\n                        color: '#ff4842',\r\n                        fontSize: '12px',\r\n                        fontFamily: 'sans-serif',\r\n                      }}\r\n                    >\r\n                      {OrderItemStatus.NEW.statusValue}\r\n                    </Typography>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ) : (\r\n            <Box sx={styleReadonly} key={index}>\r\n              {item.status === OrderItemStatus.STOCK_OUT.status ? (\r\n                <DeleteOrderItemStockOut\r\n                  item={item}\r\n                  index={index}\r\n                  handleClickDeleteItemStockOut={handleClickDeleteItemStockOut}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n\r\n              <Grid container spacing={1}>\r\n                <OrderItemAvatar\r\n                  orderItem={item}\r\n                  index={index}\r\n                  handleOpenEditModal={handleOpenEditModal}\r\n                />\r\n\r\n                <Grid\r\n                  item\r\n                  xs={10}\r\n                  md={10}\r\n                  lg={10}\r\n                  sx={{ textAlign: 'justify', top: 0 }}\r\n                >\r\n                  <OrderItemInfoOTHER item={item} index={index} />\r\n\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <Iconify\r\n                      icon=\"fluent-mdl2:status-circle-checkmark\"\r\n                      sx={{ color: 'gray' }}\r\n                    />\r\n                    {item.status === OrderItemStatus.STOCK_OUT.status ? (\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        sx={{\r\n                          color: 'red',\r\n                          fontSize: '12px',\r\n                          fontFamily: 'sans-serif',\r\n                        }}\r\n                      >\r\n                        {OrderItemStatus.STOCK_OUT.statusValue}\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        sx={{\r\n                          color: 'green',\r\n                          fontSize: '12px',\r\n                          fontFamily: 'sans-serif',\r\n                        }}\r\n                      >\r\n                        {item.status === OrderItemStatus.COOKING.status\r\n                          ? OrderItemStatus.COOKING.statusValue\r\n                          : item.status === OrderItemStatus.WAITER.status\r\n                          ? OrderItemStatus.WAITER.statusValue\r\n                          : item.status === OrderItemStatus.DELIVERY.status\r\n                          ? OrderItemStatus.DELIVERY.statusValue\r\n                          : OrderItemStatus.DONE.statusValue}\r\n                      </Typography>\r\n                    )}\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )\r\n        )}\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\n// @mui\r\nimport { Button, Popover } from '@mui/material'\r\n// ----------------------------------------------------------------------\r\n\r\nimport MenuItem from '@mui/material/MenuItem'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n// component\r\nimport Iconify from 'components/Iconify'\r\nimport { clearData } from 'app/authSlice'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AUTH } from 'constants/global'\r\n\r\nMenuBar.propTypes = {}\r\n\r\nexport default function MenuBar() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [open, setOpen] = useState(null)\r\n  const navigate = useNavigate()\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget)\r\n  }\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null)\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(AUTH.ACCESS_TOKEN)\r\n\r\n    const action = clearData()\r\n    dispatch(action)\r\n\r\n    navigate('/login')\r\n  }\r\n\r\n  const handleNextKitchen = () => {\r\n    navigate('/kitchen')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {Boolean(open) ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            position: 'absolute',\r\n            minHeight: '35px',\r\n            maxHeight: '35px',\r\n            minWidth: '35px',\r\n            maxWidth: '35px',\r\n            padding: 0,\r\n            textAlign: 'center',\r\n            mt: '3px',\r\n            // ml: 2,\r\n            right: '0px !important',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#F9FAFB',\r\n            color: '#7266ba',\r\n            boxShadow: 'none',\r\n            '&:hover': {\r\n              backgroundColor: '#F9FAFB',\r\n              color: '#7266ba',\r\n            },\r\n          }}\r\n          onClick={handleOpenMenu}\r\n        >\r\n          <Iconify icon={'mdi:menu-open'} width={20} height={50} />\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            position: 'absolute',\r\n            minHeight: '35px',\r\n            maxHeight: '35px',\r\n            minWidth: '35px',\r\n            maxWidth: '35px',\r\n            padding: 0,\r\n            textAlign: 'center',\r\n            mt: '3px',\r\n            // ml: 2,\r\n            right: '0 !important',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#7266ba',\r\n            color: 'white',\r\n            boxShadow: 'none',\r\n            '&:hover': {\r\n              backgroundColor: '#F9FAFB',\r\n              color: '#7266ba',\r\n            },\r\n          }}\r\n          onClick={handleOpenMenu}\r\n        >\r\n          <Iconify icon={'mdi:menu-open'} width={20} height={50} />\r\n        </Button>\r\n      )}\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 160,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleNextKitchen}>\r\n          <Iconify icon={'ep:dish-dot'} sx={{ mr: 2 }} />\r\n          Nhà bếp\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Iconify icon={'twemoji:card-file-box'} sx={{ mr: 2 }} />\r\n          Quản lý\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Iconify icon={'flat-color-icons:edit-image'} sx={{ mr: 2 }} />\r\n          Sửa thông tin\r\n        </MenuItem>\r\n\r\n        <MenuItem sx={{ color: 'error.main' }} onClick={handleLogout}>\r\n          <Iconify icon={'entypo:log-out'} sx={{ mr: 2 }} />\r\n          Đăng xuất\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Stack,\r\n  Divider,\r\n  TextField,\r\n  Button,\r\n  Fade,\r\n  Box,\r\n  Modal,\r\n} from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport Helper from 'utils/Helper'\r\nimport { COUDINARY } from 'constants/global'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  increaseQuantityCurrentOrderItem,\r\n  decreaseQuantityCurrentOrderItem,\r\n  changeQuantityCurrentOrderItem,\r\n  setNoteCurrentOrderItem,\r\n  addItem,\r\n  updateItem,\r\n  setTotalAmount,\r\n} from 'app/orderItemSlice'\r\nimport { toast } from 'react-toastify'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ModalOrder({\r\n  openModalOrder,\r\n  handleCloseMorderOrder,\r\n  checkEditModal,\r\n}) {\r\n  // const dispatch = useDispatch()\r\n\r\n  const orderItemData = useSelector((state) => state.orderItemData.data)\r\n\r\n  const currentOrderItem = orderItemData.currentOrderItem\r\n\r\n  return Object.keys(currentOrderItem).length ? (\r\n    <ModalComponent\r\n      openModalOrder={openModalOrder}\r\n      currentOrderItem={currentOrderItem}\r\n      handleCloseMorderOrder={handleCloseMorderOrder}\r\n      checkEditModal={checkEditModal}\r\n    />\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nfunction ModalComponent({\r\n  openModalOrder,\r\n  currentOrderItem,\r\n  handleCloseMorderOrder,\r\n  checkEditModal,\r\n}) {\r\n  const dispatch = useDispatch()\r\n\r\n  // Tăng số lượng modal chọn món\r\n  const handleIncreaseQuantity = () => {\r\n    const increaseQuantityCurrentOrderItemAction =\r\n      increaseQuantityCurrentOrderItem()\r\n    dispatch(increaseQuantityCurrentOrderItemAction)\r\n  }\r\n\r\n  // Giảm số lượng modal chọn món\r\n  const handleDecreaseQuantity = () => {\r\n    const decreaseQuantityCurrentOrderItemAction =\r\n      decreaseQuantityCurrentOrderItem()\r\n    dispatch(decreaseQuantityCurrentOrderItemAction)\r\n  }\r\n\r\n  // Thay đổi số lượng modal chọn món\r\n  const handleChangeQuantity = (e) => {\r\n    const quantity = +e.target.value\r\n\r\n    if (quantity > 0 && quantity < 100) {\r\n      const action = changeQuantityCurrentOrderItem(quantity)\r\n      dispatch(action)\r\n    }\r\n  }\r\n\r\n  const handleChangeNote = (e) => {\r\n    const note = e.target.value\r\n    const action = setNoteCurrentOrderItem(note)\r\n    dispatch(action)\r\n  }\r\n\r\n  // Thêm món ăn\r\n  const handleOrderProduct = async () => {\r\n    if (checkEditModal) {\r\n      dispatch(updateItem())\r\n      toast.success('Sửa món thành công')\r\n    } else {\r\n      dispatch(addItem())\r\n      toast.success('Thêm món thành công')\r\n    }\r\n\r\n    dispatch(setTotalAmount())\r\n\r\n    // setCheckEditModal(false)\r\n    // checkEditModal = false\r\n\r\n    handleCloseMorderOrder()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      open={openModalOrder}\r\n      onClose={handleCloseMorderOrder}\r\n      closeAfterTransition\r\n      disableAutoFocus\r\n    >\r\n      <Fade in={openModalOrder}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 800,\r\n            bgcolor: 'background.paper',\r\n            border: '2px solid #d8d8df',\r\n            borderRadius: '12px',\r\n            boxShadow: 24,\r\n            p: 3,\r\n          }}\r\n        >\r\n          <Iconify\r\n            icon={'material-symbols:close'}\r\n            position=\"absolute\"\r\n            top=\"-10px\"\r\n            right=\"-10px\"\r\n            bgcolor=\"white\"\r\n            color=\"#5A5A72\"\r\n            borderRadius=\"50%\"\r\n            border=\"1px solid #d8d8df\"\r\n            width={36}\r\n            padding={0.6}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"rgba(0, 0, 0, 0.2) 0px 2px 12px 0px\"\r\n            sx={{\r\n              '&:hover': {\r\n                color: '#131318',\r\n                bgcolor: '#EBEBEF',\r\n                border: '1px solid #B9B9c6',\r\n              },\r\n            }}\r\n            onClick={handleCloseMorderOrder}\r\n          />\r\n          <Typography\r\n            id=\"transition-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n            sx={{\r\n              color: '#53382c',\r\n              textTransform: 'uppercase',\r\n              fontWeight: 'bolder',\r\n              fontFamily: 'fontkhachhang',\r\n            }}\r\n          >\r\n            {currentOrderItem.productTitle}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={5} md={5} lg={5}>\r\n              <Box sx={{ position: 'relative' }}>\r\n                <img\r\n                  alt={currentOrderItem.productTitle}\r\n                  src={\r\n                    COUDINARY.url +\r\n                    '/' +\r\n                    COUDINARY.SCALE_IMAGE_300_300 +\r\n                    '/' +\r\n                    currentOrderItem.productAvatar.fileFolder +\r\n                    '/' +\r\n                    currentOrderItem.productAvatar.fileName\r\n                  }\r\n                  sx={{\r\n                    top: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    objectFit: 'cover',\r\n                    position: 'absolute',\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                mt={2}\r\n              >\r\n                <Typography\r\n                  variant=\"transition-modal-description\"\r\n                  sx={{\r\n                    mr: 3,\r\n                    fontSize: '14px',\r\n                    color: '#333333',\r\n                    fontWeight: 'normal',\r\n                  }}\r\n                >\r\n                  TỔNG CỘNG:\r\n                </Typography>\r\n\r\n                <Typography\r\n                  sx={{\r\n                    color: '#b22830',\r\n                    fontWeight: 700,\r\n                    fontFamily: 'sans-serif',\r\n                  }}\r\n                >\r\n                  {Helper.formatCurrencyToVND(\r\n                    currentOrderItem.quantity * currentOrderItem.price\r\n                  )}\r\n                </Typography>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={7} md={7} lg={7} sx={{ textAlign: 'justify' }}>\r\n              <Typography\r\n                variant=\"transition-modal-description\"\r\n                sx={{\r\n                  fontSize: '14px',\r\n                  color: '#53382c',\r\n                  fontWeight: 'normal',\r\n                  lineHeight: 1,\r\n                }}\r\n              >\r\n                {currentOrderItem.description}\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 2 }}>\r\n                <Typography\r\n                  variant=\"transition-modal-description\"\r\n                  sx={{\r\n                    mr: 1,\r\n                    fontSize: '14px',\r\n                    color: '#333333',\r\n                    fontWeight: 'normal',\r\n                  }}\r\n                >\r\n                  Giá:\r\n                </Typography>\r\n\r\n                <Typography\r\n                  sx={{\r\n                    color: '#53382c',\r\n                    fontWeight: 700,\r\n                    fontFamily: 'sans-serif',\r\n                  }}\r\n                >\r\n                  {Helper.formatCurrencyToVND(currentOrderItem.price)}\r\n                </Typography>\r\n              </Stack>\r\n              <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 2 }}>\r\n                <Typography\r\n                  variant=\"transition-modal-description\"\r\n                  sx={{\r\n                    mr: 1,\r\n                    fontSize: '14px',\r\n                    color: '#333333',\r\n                    fontWeight: 'normal',\r\n                  }}\r\n                >\r\n                  Số lượng:\r\n                </Typography>\r\n                <TextField\r\n                  inputProps={{ pattern: '^[0-9]+$' }}\r\n                  value={currentOrderItem.quantity}\r\n                  size=\"small\"\r\n                  sx={{\r\n                    ml: 2,\r\n                    input: {\r\n                      color: '#53382c',\r\n                      fontWeight: 700,\r\n                      fontFamily: 'sans-serif',\r\n                      textAlign: 'center',\r\n                      width: '150px',\r\n                    },\r\n                  }}\r\n                  onChange={handleChangeQuantity}\r\n                />\r\n                <Button\r\n                  disabled={currentOrderItem.quantity <= 1}\r\n                  sx={{\r\n                    color: '#f42525',\r\n                    cursor: 'pointer',\r\n                    ml: 12,\r\n                    borderRadius: '50%',\r\n                    maxWidth: '30px',\r\n                    minWidth: '35px',\r\n                    maxHeight: '30px',\r\n                    minHeight: '35px',\r\n                    border: 'none',\r\n                    fontWeight: '20px',\r\n                    position: 'absolute',\r\n                    '&:hover': {\r\n                      backgroundColor: '#ff563014',\r\n                      border: 'none',\r\n                    },\r\n                  }}\r\n                  onClick={handleDecreaseQuantity}\r\n                >\r\n                  <Iconify icon=\"ic:outline-minus\" />\r\n                </Button>\r\n                <Button\r\n                  disabled={currentOrderItem.quantity >= 99}\r\n                  sx={{\r\n                    color: '#0dbd16',\r\n                    cursor: 'pointer',\r\n                    ml: 28,\r\n                    borderRadius: '50%',\r\n                    maxWidth: '30px',\r\n                    minWidth: '35px',\r\n                    maxHeight: '30px',\r\n                    minHeight: '35px',\r\n                    border: 'none',\r\n                    position: 'absolute',\r\n                    '&:hover': {\r\n                      backgroundColor: '##cedfcf',\r\n                      border: 'none',\r\n                    },\r\n                  }}\r\n                  onClick={handleIncreaseQuantity}\r\n                >\r\n                  <Iconify icon=\"ic:baseline-plus\" />\r\n                </Button>\r\n              </Stack>\r\n\r\n              <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 2 }}>\r\n                <Typography\r\n                  variant=\"transition-modal-description\"\r\n                  sx={{\r\n                    mr: 1,\r\n                    fontSize: '14px',\r\n                    color: '#333333',\r\n                    fontWeight: 'normal',\r\n                  }}\r\n                >\r\n                  Đơn vị:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"transition-modal-description\"\r\n                  sx={{\r\n                    mr: 1,\r\n                    ml: 4,\r\n                    fontSize: '18px',\r\n                    fontWeight: '600',\r\n                    color: '#333333',\r\n                    // fontWeight: 'normal',\r\n                  }}\r\n                >\r\n                  {currentOrderItem.unitTitle}\r\n                </Typography>\r\n              </Stack>\r\n\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Ghi chú\"\r\n                variant=\"standard\"\r\n                value={currentOrderItem.note}\r\n                onChange={handleChangeNote}\r\n                sx={{\r\n                  input: {\r\n                    fontFamily: 'sans-serif',\r\n                    width: '400px',\r\n                  },\r\n                }}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{\r\n                  color: 'white',\r\n                  backgroundColor: '#4B4086',\r\n                  border: '1px solid #4B4086',\r\n                  mt: 2,\r\n                  ml: '36%',\r\n                  '&:hover': {\r\n                    backgroundColor: 'white',\r\n                    color: '#4B4086',\r\n                  },\r\n                }}\r\n                onClick={handleOrderProduct}\r\n              >\r\n                Đặt món ngay\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button } from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nconst active = {\r\n  position: 'relative',\r\n  mt: '4px',\r\n  ml: '9px',\r\n  borderRadius: '15px 15px 0 0',\r\n  backgroundColor: '#F9FAFB',\r\n  color: '#4b4086',\r\n  boxShadow: 'none',\r\n  '&:hover': {\r\n    backgroundColor: '#F9FAFB',\r\n  },\r\n}\r\n\r\nconst deActive = {\r\n  position: 'relative',\r\n  mt: '4px',\r\n  ml: '9px',\r\n  borderRadius: '15px 15px 0 0',\r\n  backgroundColor: '#5B509A',\r\n  boxShadow: 'none',\r\n  '&:hover': {\r\n    backgroundColor: '#F9FAFB',\r\n    color: '#4b4086',\r\n  },\r\n}\r\n\r\nexport default function TabTableAndMenu({ checkTab, setCheckTab, ...other }) {\r\n  const restaurantsData = useSelector((state) => state.baseData.data)\r\n  const currentTable = restaurantsData.currentTable\r\n\r\n  const showTables = () => {\r\n    setCheckTab({\r\n      ...checkTab,\r\n      table: true,\r\n      menu: false,\r\n      billHistory: false,\r\n    })\r\n  }\r\n\r\n  const showMenu = () => {\r\n    Object.keys(currentTable).length\r\n      ? setCheckTab({\r\n          ...checkTab,\r\n          table: false,\r\n          menu: true,\r\n          billHistory: false,\r\n        })\r\n      : toast.warning('Vui lòng chọn bàn !')\r\n  }\r\n\r\n  const showBillHistory = () => {\r\n    setCheckTab({\r\n      ...checkTab,\r\n      table: false,\r\n      menu: false,\r\n      billHistory: true,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {checkTab.table ? (\r\n        <Button variant=\"contained\" sx={active}>\r\n          <Iconify\r\n            icon={'ic:twotone-restaurant-menu'}\r\n            color=\"#4b4086\"\r\n            width={20}\r\n            height={50}\r\n            sx={{ mr: 1 }}\r\n          />\r\n          Phòng Bàn\r\n        </Button>\r\n      ) : (\r\n        <Button variant=\"contained\" onClick={showTables} sx={deActive}>\r\n          <Iconify\r\n            icon={'ic:twotone-restaurant-menu'}\r\n            width={20}\r\n            height={50}\r\n            sx={{ mr: 1 }}\r\n          />\r\n          Phòng Bàn\r\n        </Button>\r\n      )}\r\n      {checkTab.menu ? (\r\n        <Button variant=\"contained\" sx={active}>\r\n          <Iconify\r\n            icon={'ic:baseline-menu-book'}\r\n            width={20}\r\n            height={50}\r\n            sx={{\r\n              mr: 1,\r\n            }}\r\n          />\r\n          Thực đơn\r\n        </Button>\r\n      ) : (\r\n        <Button variant=\"contained\" onClick={showMenu} sx={deActive}>\r\n          <Iconify\r\n            icon={'ic:baseline-menu-book'}\r\n            width={20}\r\n            height={50}\r\n            sx={{\r\n              mr: 1,\r\n            }}\r\n          />\r\n          Thực đơn\r\n        </Button>\r\n      )}\r\n      {checkTab.billHistory ? (\r\n        <Button variant=\"contained\" sx={active}>\r\n          <Iconify\r\n            icon={'icon-park-outline:bill'}\r\n            width={20}\r\n            height={50}\r\n            sx={{\r\n              mr: 1,\r\n            }}\r\n          />\r\n          Hoá đơn\r\n        </Button>\r\n      ) : (\r\n        <Button variant=\"contained\" onClick={showBillHistory} sx={deActive}>\r\n          <Iconify\r\n            icon={'icon-park-outline:bill'}\r\n            width={20}\r\n            height={50}\r\n            sx={{\r\n              mr: 1,\r\n            }}\r\n          />\r\n          Hoá đơn\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles'\r\nimport { Toolbar, OutlinedInput } from '@mui/material'\r\n// component\r\nimport Iconify from 'components/Iconify'\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\r\n  // marginLeft: '350px',\r\n  minHeight: '0px !important',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3),\r\n}))\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter,\r\n  }),\r\n  '&.Mui-focused': {\r\n    width: 320,\r\n    boxShadow: theme.customShadows.z8,\r\n  },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n  },\r\n}))\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAppSearchProduct.propTypes = {\r\n  categories: PropTypes.array,\r\n  keyword: PropTypes.string,\r\n  handleSearch: PropTypes.func,\r\n  onFilterName: PropTypes.func,\r\n  onDeleteSearch: PropTypes.func,\r\n}\r\n\r\nexport default function AppSearchProduct({\r\n  categories,\r\n  keyword,\r\n  handleChangeCategory,\r\n  onFilterName,\r\n  doSearch,\r\n}) {\r\n  return (\r\n    <div className=\"col-12 d-flex ms-auto\">\r\n      <div className=\"me-2\" style={{ marginLeft: 'auto' }}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"keyWord\"\r\n          value={keyword}\r\n          onChange={onFilterName}\r\n          className=\"form-control\"\r\n          placeholder=\"Tìm kiếm...\"\r\n        />\r\n      </div>\r\n      <div className=\"me-2\">\r\n        <select\r\n          className=\"form-select select2-container\"\r\n          id=\"categoryFilter\"\r\n          onChange={handleChangeCategory}\r\n        >\r\n          {categories &&\r\n            categories.map((cate) => (\r\n              <option key={cate.id} value={cate.id}>\r\n                {cate.title}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"me-2\">\r\n        <button\r\n          className=\"btn\"\r\n          id=\"btnSearch\"\r\n          style={{\r\n            border: '1px solid #7266ba',\r\n            color: '#4b4086',\r\n            '&:hover': {\r\n              backgroundColor: 'rgb(114 102 186)',\r\n              color: '#fff',\r\n            },\r\n          }}\r\n          onClick={doSearch}\r\n        >\r\n          <Iconify icon={'il:search'} cursor=\"pointer\" />\r\n          Tìm kiếm\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Fade,\r\n  Box,\r\n  Modal,\r\n} from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ModalChangeTable({\r\n  openModalChangeTable,\r\n  emptyTable,\r\n  currentTable,\r\n  selectTable,\r\n  handleCloseModal,\r\n  handleSelectTableChange,\r\n  handleChangeTable,\r\n}) {\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      open={openModalChangeTable}\r\n      onClose={handleCloseModal}\r\n      closeAfterTransition\r\n      disableAutoFocus\r\n    >\r\n      <Fade in={openModalChangeTable}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 800,\r\n            bgcolor: 'background.paper',\r\n            border: '2px solid #d8d8df',\r\n            borderRadius: '12px',\r\n            boxShadow: 24,\r\n            p: 3,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Iconify\r\n            icon={'material-symbols:close'}\r\n            position=\"absolute\"\r\n            top=\"-10px\"\r\n            right=\"-10px\"\r\n            bgcolor=\"white\"\r\n            color=\"#5A5A72\"\r\n            borderRadius=\"50%\"\r\n            border=\"1px solid #d8d8df\"\r\n            width={36}\r\n            padding={0.6}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"rgba(0, 0, 0, 0.2) 0px 2px 12px 0px\"\r\n            sx={{\r\n              '&:hover': {\r\n                color: '#131318',\r\n                bgcolor: '#EBEBEF',\r\n                border: '1px solid #B9B9c6',\r\n              },\r\n            }}\r\n            onClick={handleCloseModal}\r\n          />\r\n\r\n          <div className=\"row\">\r\n            <Typography\r\n              id=\"transition-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n              sx={{\r\n                color: '#53382c',\r\n                textTransform: 'uppercase',\r\n                fontWeight: 'bolder',\r\n                fontFamily: 'fontkhachhang',\r\n              }}\r\n            >\r\n              VUI LÒNG CHỌN BÀN ĐỂ CHUYỂN\r\n            </Typography>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-3 d-flex justify-content-center align-items-center\">\r\n              <Card sx={{ width: '100%', backgroundColor: '#fff' }}>\r\n                <CardContent>\r\n                  <Box>\r\n                    <Paper\r\n                      key={currentTable.name}\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        py: 2.5,\r\n                        textAlign: 'center',\r\n                        paddingTop: 0,\r\n                        paddingBottom: 0,\r\n                        background: '#4b4086',\r\n                        color: 'white',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          pt: 1.5,\r\n                          pb: 1.5,\r\n                          '&:hover': {\r\n                            backgroundColor: '#4B4086',\r\n                            color: 'white',\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"h6\">\r\n                          {currentTable.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-1 d-flex justify-content-center align-items-center\">\r\n              <Iconify\r\n                icon={'icon-park-outline:right-two'}\r\n                width={100}\r\n                // sx={{\r\n                //     width: \"100px\"\r\n                // }}\r\n              />\r\n            </div>\r\n            <div className=\"col-8\" style={{ margin: '20px 0' }}>\r\n              <Card>\r\n                <CardContent sx={{ backgroundColor: '#fff' }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'grid',\r\n                      gap: 4,\r\n                      gridTemplateColumns: 'repeat(4, 1fr)',\r\n                    }}\r\n                  >\r\n                    {emptyTable &&\r\n                      emptyTable.map((item) =>\r\n                        item.id === selectTable.id ? (\r\n                          <Paper\r\n                            key={item.name}\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                              py: 2.5,\r\n                              textAlign: 'center',\r\n                              paddingTop: 0,\r\n                              paddingBottom: 0,\r\n                              background: '#4B4086',\r\n                              color: 'white',\r\n                            }}\r\n                            onClick={(e) => handleSelectTableChange(e, item)}\r\n                          >\r\n                            <Box\r\n                              sx={{\r\n                                background: 'orange',\r\n                                borderBottom: '1px solid #e5e8eb',\r\n                                color: 'white',\r\n                                opacity: [0.9, 0.8, 0.7],\r\n                              }}\r\n                            ></Box>\r\n\r\n                            <Box\r\n                              sx={{\r\n                                cursor: 'pointer',\r\n                                pt: 1.5,\r\n                                pb: 1.5,\r\n                                '&:hover': {\r\n                                  backgroundColor: 'orange',\r\n                                  color: 'white',\r\n                                  opacity: [0.9, 0.8, 0.7],\r\n                                },\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h6\">{item.name}</Typography>\r\n                            </Box>\r\n                          </Paper>\r\n                        ) : (\r\n                          <Paper\r\n                            key={item.name}\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                              py: 2.5,\r\n                              textAlign: 'center',\r\n                              paddingTop: 0,\r\n                              paddingBottom: 0,\r\n                              background: 'white',\r\n                            }}\r\n                            onClick={(e) => handleSelectTableChange(e, item)}\r\n                          >\r\n                            <Box\r\n                              sx={{\r\n                                background: '#d1e9fc',\r\n                                borderBottom: '1px solid #e5e8eb',\r\n                              }}\r\n                            ></Box>\r\n\r\n                            <Box\r\n                              sx={{\r\n                                cursor: 'pointer',\r\n                                pt: 1.5,\r\n                                pb: 1.5,\r\n                                '&:hover': {\r\n                                  backgroundColor: 'orange',\r\n                                  color: 'white',\r\n                                  opacity: [0.9, 0.8, 0.7],\r\n                                },\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h6\">{item.name}</Typography>\r\n                            </Box>\r\n                          </Paper>\r\n                        )\r\n                      )}\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n          <div className=\"row d-flex justify-content-center align-items-center\">\r\n            <div\r\n              className=\"row d-flex justify-content-center align-items-center\"\r\n              style={{ width: '20%' }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{\r\n                  color: 'white',\r\n                  backgroundColor: '#4B4086',\r\n                  border: '1px solid #4B4086',\r\n                  mt: 2,\r\n                  '&:hover': {\r\n                    backgroundColor: 'white',\r\n                    color: '#7266ba',\r\n                  },\r\n                }}\r\n                onClick={handleChangeTable}\r\n              >\r\n                Chuyển bàn\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n  Fade,\r\n  Box,\r\n  Modal,\r\n} from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { CombineTable } from 'app/restaurantSlice'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { EnumStatus } from 'constants/EnumStatus'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ModalMergeTable({\r\n  openModalMergeTable,\r\n  currentTable,\r\n  handleCloseModal,\r\n}) {\r\n  const dispatch = useDispatch()\r\n\r\n  const [state, setState] = useState({\r\n    currentTableId: -1,\r\n    currentTableName: '',\r\n    targetTableId: -1,\r\n    targetTableName: '',\r\n    active: 0,\r\n    loadingCombine: false,\r\n  })\r\n\r\n  const restaurantsData = useSelector((state) => state.baseData.data)\r\n  const tables = restaurantsData.tables\r\n\r\n  const busyTable = tables.filter(\r\n    (table) =>\r\n      table.status === EnumStatus.BUSY.status && table.id !== currentTable.id\r\n  )\r\n\r\n  const handleSetTable = (tableId, tableName) => {\r\n    setState({\r\n      ...state,\r\n      currentTableId: currentTable.id,\r\n      currentTableName: currentTable.name,\r\n      targetTableId: tableId,\r\n      targetTableName: tableName,\r\n      active: tableId,\r\n    })\r\n  }\r\n\r\n  const handleClickCombineTable = (\r\n    currentTableId,\r\n    targetId,\r\n    targetName,\r\n    currentName\r\n  ) => {\r\n    setState({\r\n      ...state,\r\n      loadingCombine: true,\r\n    })\r\n\r\n    const obj = {\r\n      currentTableId,\r\n      targetTableId: targetId,\r\n    }\r\n\r\n    dispatch(CombineTable(obj))\r\n      .unwrap()\r\n      .then((data) => {\r\n        toast.success(`'${currentName}' và '${targetName}' đã gộp xong.`)\r\n      })\r\n      .catch((error) => {\r\n        const message = error.response.data.message\r\n        toast.error(message)\r\n        // toast.error(`'${currentName}' và '${targetName}' gộp thất bại.`)\r\n      })\r\n      .finally(() => {\r\n        setState({\r\n          ...state,\r\n          active: 0,\r\n          loadingCombine: false,\r\n        })\r\n        handleCloseModal()\r\n      })\r\n  }\r\n\r\n  const {\r\n    currentTableId,\r\n    currentTableName,\r\n    targetTableId,\r\n    targetTableName,\r\n    active,\r\n    loadingCombine,\r\n  } = state\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      open={openModalMergeTable}\r\n      onClose={handleCloseModal}\r\n      closeAfterTransition\r\n      disableAutoFocus\r\n    >\r\n      <Fade in={openModalMergeTable}>\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 800,\r\n            bgcolor: 'background.paper',\r\n            border: '2px solid #d8d8df',\r\n            borderRadius: '12px',\r\n            boxShadow: 24,\r\n            p: 3,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Iconify\r\n            icon={'material-symbols:close'}\r\n            position=\"absolute\"\r\n            top=\"-10px\"\r\n            right=\"-10px\"\r\n            bgcolor=\"white\"\r\n            color=\"#5A5A72\"\r\n            borderRadius=\"50%\"\r\n            border=\"1px solid #d8d8df\"\r\n            width={36}\r\n            padding={0.6}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"rgba(0, 0, 0, 0.2) 0px 2px 12px 0px\"\r\n            sx={{\r\n              '&:hover': {\r\n                color: '#131318',\r\n                bgcolor: '#EBEBEF',\r\n                border: '1px solid #B9B9c6',\r\n              },\r\n            }}\r\n            onClick={handleCloseModal}\r\n          />\r\n\r\n          <div className=\"row\">\r\n            <Typography\r\n              id=\"transition-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n              sx={{\r\n                color: '#53382c',\r\n                textTransform: 'uppercase',\r\n                fontWeight: 'bolder',\r\n                fontFamily: 'fontkhachhang',\r\n              }}\r\n            >\r\n              VUI LÒNG CHỌN BÀN ĐỂ GHÉP\r\n            </Typography>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-3 d-flex justify-content-center align-items-center\">\r\n              <Card sx={{ width: '100%' }}>\r\n                <CardContent>\r\n                  <Box>\r\n                    <Paper\r\n                      key={currentTable.name}\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        py: 2.5,\r\n                        textAlign: 'center',\r\n                        paddingTop: 0,\r\n                        paddingBottom: 0,\r\n                        background: 'white',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          cursor: 'pointer',\r\n                          pt: 1.5,\r\n                          pb: 1.5,\r\n                          '&:hover': {\r\n                            backgroundColor: 'orange',\r\n                            color: 'white',\r\n                            opacity: [0.9, 0.8, 0.7],\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"h6\">\r\n                          {currentTable.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-1 d-flex justify-content-center align-items-center\">\r\n              <Iconify\r\n                icon={'mdi:merge'}\r\n                width={100}\r\n                // sx={{\r\n                //     width: \"100px\"\r\n                // }}\r\n              />\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <Card>\r\n                <CardContent>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'grid',\r\n                      gap: 4,\r\n                      gridTemplateColumns: 'repeat(4, 1fr)',\r\n                    }}\r\n                  >\r\n                    {busyTable &&\r\n                      busyTable.map((item) => (\r\n                        <Paper\r\n                          key={item.name}\r\n                          variant=\"outlined\"\r\n                          sx={{\r\n                            py: 2.5,\r\n                            textAlign: 'center',\r\n                            paddingTop: 0,\r\n                            paddingBottom: 0,\r\n                            background: 'white',\r\n                          }}\r\n                        >\r\n                          <Box\r\n                            sx={{\r\n                              background: '#d1e9fc',\r\n                              borderBottom: '1px solid #e5e8eb',\r\n                            }}\r\n                          ></Box>\r\n\r\n                          <Box\r\n                            sx={{\r\n                              cursor: 'pointer',\r\n                              pt: 1.5,\r\n                              pb: 1.5,\r\n                              '&:hover': {\r\n                                backgroundColor: 'orange',\r\n                                color: 'white',\r\n                                opacity: [0.9, 0.8, 0.7],\r\n                              },\r\n                            }}\r\n                            className={`${\r\n                              active === item.id ? 'active' : ''\r\n                            } \"`}\r\n                          >\r\n                            <Typography\r\n                              variant=\"h6\"\r\n                              onClick={() => {\r\n                                handleSetTable(item.id, item.name)\r\n                              }}\r\n                            >\r\n                              {item.name}\r\n                            </Typography>\r\n                          </Box>\r\n                        </Paper>\r\n                      ))}\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n          <div className=\"row d-flex justify-content-center align-items-center\">\r\n            <div\r\n              className=\"row d-flex justify-content-center align-items-center\"\r\n              style={{ width: '20%' }}\r\n            >\r\n              <LoadingButton\r\n                loading={loadingCombine}\r\n                sx={{\r\n                  color: 'white',\r\n                  backgroundColor: '#4B4086',\r\n                  border: '1px solid #4B4086',\r\n                  mt: 2,\r\n                  '&:hover': {\r\n                    backgroundColor: 'white',\r\n                    color: '#4B4086',\r\n                  },\r\n                }}\r\n                onClick={() => {\r\n                  handleClickCombineTable(\r\n                    currentTableId,\r\n                    targetTableId,\r\n                    targetTableName,\r\n                    currentTableName\r\n                  )\r\n                }}\r\n              >\r\n                Ghép bàn\r\n              </LoadingButton>\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </Fade>\r\n    </Modal>\r\n  )\r\n}\r\n","import MenuItem from '@mui/material/MenuItem'\r\n\r\n// @mui\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  Paper,\r\n  Typography,\r\n  CardContent,\r\n  Popover,\r\n} from '@mui/material'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ----------------------------------------------------------------------\r\nimport React, { useState } from 'react'\r\n\r\n// SweetAlert\r\nimport 'layouts/sweetalert.css'\r\n\r\n// components\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport Iconify from 'components/Iconify'\r\n\r\n// enum status tables\r\nimport { EnumStatus } from 'constants/EnumStatus'\r\nimport ModalChangeTable from './ModalChangeTable'\r\nimport ModalMergeTable from './ModalMergeTable'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport {\r\n  changeTable,\r\n  UnCombineTable,\r\n  setDataLoading,\r\n  closeCurrentTable,\r\n  updateChangeTableStatus,\r\n} from 'app/restaurantSlice'\r\n\r\nexport default function AppTablesList({\r\n  onClick,\r\n  title,\r\n  subheader,\r\n  closeTable,\r\n  handleSelectTable,\r\n  ...other\r\n}) {\r\n  const dispatch = useDispatch()\r\n\r\n  const baseData = useSelector((state) => state.baseData.data)\r\n  const loadingGlobal = baseData.loading\r\n\r\n  const restaurantsData = useSelector((state) => state.baseData.data)\r\n  const tables = restaurantsData.tables\r\n\r\n  const [openMenuTable, setOpenMenuTable] = useState(null)\r\n  const [checkOpenMenuTable, setCheckOpenMenuTable] = useState(false)\r\n  const [openModalChangeTable, setOpenModalChangeTable] = useState(false)\r\n  const [openModalMergeTable, setOpenModalMergeTable] = useState(false)\r\n  const [currentTable, setCurrentTable] = useState({})\r\n  const [selectTable, setSelectTable] = useState({})\r\n\r\n  const emptyTable = tables.filter(\r\n    (table) => table.status === EnumStatus.EMPTY.status\r\n  )\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuTable(null)\r\n    setCheckOpenMenuTable(false)\r\n  }\r\n\r\n  const handleOpenMenuTable = (e, table) => {\r\n    setOpenMenuTable(e.currentTarget)\r\n    setCurrentTable(table)\r\n  }\r\n\r\n  const handleOpenMenuChangeTable = (e) => {\r\n    setOpenModalChangeTable(true)\r\n    setOpenMenuTable(false)\r\n  }\r\n\r\n  const handleCloseModal = (e) => {\r\n    setOpenModalChangeTable(false)\r\n    setOpenModalMergeTable(false)\r\n  }\r\n\r\n  const handleOpenModalMergeTable = (e) => {\r\n    setOpenModalMergeTable(true)\r\n    setOpenMenuTable(false)\r\n  }\r\n\r\n  const handleCloseTable = () => {\r\n    let obj = {\r\n      currentTableId: currentTable.id,\r\n    }\r\n    dispatch(closeCurrentTable(obj))\r\n      .unwrap()\r\n      .then(() => {\r\n        toast.success(`đóng '${currentTable.name}' thành công.`)\r\n      })\r\n      .catch(() => {\r\n        toast.error(`đóng bàn thất bại.`)\r\n      })\r\n  }\r\n\r\n  const handleSelectTableChange = (e, table) => {\r\n    setSelectTable(table)\r\n  }\r\n\r\n  const handleChangeTable = () => {\r\n    let obj = {\r\n      oldTableId: currentTable.id,\r\n      newTableId: selectTable.id,\r\n    }\r\n\r\n    dispatch(setDataLoading(true))\r\n    dispatch(changeTable(obj))\r\n      .unwrap()\r\n      .then((data) => {\r\n        handleCloseModal()\r\n        const oldTable = {\r\n          tableId: currentTable.id,\r\n          status: EnumStatus.EMPTY.status,\r\n          statusValue: EnumStatus.EMPTY.statusValue,\r\n        }\r\n        const newTable = {\r\n          tableId: selectTable.id,\r\n          status: EnumStatus.BUSY.status,\r\n          statusValue: EnumStatus.BUSY.statusValue,\r\n        }\r\n        dispatch(updateChangeTableStatus(oldTable))\r\n        dispatch(updateChangeTableStatus(newTable))\r\n        dispatch(setDataLoading(false))\r\n        toast.success(\r\n          `Chuyển '${currentTable.name}' sang '${selectTable.name}' thành công.`\r\n        )\r\n      })\r\n      .catch(() => {\r\n        dispatch(setDataLoading(false))\r\n        toast.error(`Thao tác chuyển bàn thất bại.`)\r\n      })\r\n  }\r\n\r\n  const handleClickUnCombineTable = (currentTableId, currentTableName) => {\r\n    const obj = {\r\n      currentTableId,\r\n    }\r\n\r\n    dispatch(UnCombineTable(obj))\r\n      .unwrap()\r\n      .then((data) => {\r\n        toast.success(`'${currentTableName}' đã tách thành công.`)\r\n      })\r\n      .catch(() => {\r\n        toast.error(`'${currentTableName}' tách thất bại.`)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card {...other}>\r\n        <CardContent>\r\n          <Box\r\n            sx={{\r\n              display: 'grid',\r\n              gap: 4,\r\n              gridTemplateColumns: 'repeat(4, 1fr)',\r\n            }}\r\n          >\r\n            {tables &&\r\n              tables.map((item) =>\r\n                item.status === EnumStatus.EMPTY.status ? (\r\n                  <Paper\r\n                    key={item.name}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      py: 2.5,\r\n                      textAlign: 'center',\r\n                      paddingTop: 0,\r\n                      paddingBottom: 0,\r\n                      background: 'white',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        background: '#d1e9fc',\r\n                        borderBottom: '1px solid #e5e8eb',\r\n                      }}\r\n                    >\r\n                      <Tooltip title=\"Mở bàn\">\r\n                        <Iconify\r\n                          icon={'mdi:bell-circle'}\r\n                          color=\"black\"\r\n                          width={32}\r\n                          cursor=\"pointer\"\r\n                          onClick={() => {\r\n                            handleSelectTable(item)\r\n                          }}\r\n                          sx={{\r\n                            '&:hover': {\r\n                              color: 'red',\r\n                              opacity: [0.9, 0.8, 0.7],\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </Box>\r\n\r\n                    <Box\r\n                      onClick={() => {\r\n                        handleSelectTable(item)\r\n                      }}\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        pt: 1.5,\r\n                        pb: 1.5,\r\n                        '&:hover': {\r\n                          backgroundColor: 'orange',\r\n                          color: 'white',\r\n                          opacity: [0.9, 0.8, 0.7],\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ color: 'gray' }}>\r\n                        {EnumStatus.EMPTY.statusValue}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"h6\">{item.name}</Typography>\r\n                    </Box>\r\n                  </Paper>\r\n                ) : item.status === EnumStatus.BUSY.status ? (\r\n                  <Paper\r\n                    key={item.name}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      py: 2.5,\r\n                      textAlign: 'center',\r\n                      paddingTop: 0,\r\n                      paddingBottom: 0,\r\n                      background: '#7266ba',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        background: '#4b4086',\r\n                        borderBottom: '1px solid #e5e8eb',\r\n                      }}\r\n                    >\r\n                      <Iconify\r\n                        icon={'mdi:bell-circle'}\r\n                        color=\"white\"\r\n                        width={32}\r\n                        cursor=\"pointer\"\r\n                        onClick={(e) => handleOpenMenuTable(e, item)}\r\n                        sx={{\r\n                          '&:hover': {\r\n                            color: 'yellow',\r\n                            opacity: [0.9, 0.8, 0.7],\r\n                          },\r\n                        }}\r\n                      />\r\n                    </Box>\r\n\r\n                    <Box\r\n                      onClick={() => {\r\n                        handleSelectTable(item)\r\n                      }}\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        pt: 1.5,\r\n                        pb: 1.5,\r\n                        '&:hover': {\r\n                          backgroundColor: 'orange',\r\n                          color: 'white',\r\n                          opacity: [0.9, 0.8, 0.7],\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ color: 'white' }}>\r\n                        {EnumStatus.BUSY.statusValue}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n                        {item.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Paper>\r\n                ) : item.status === EnumStatus.COMBINE.status ? (\r\n                  <Paper\r\n                    key={item.name}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      py: 2.5,\r\n                      textAlign: 'center',\r\n                      paddingTop: 0,\r\n                      paddingBottom: 0,\r\n                      background: '#068DA9',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        background: '#526D82',\r\n                        borderBottom: '1px solid #e5e8eb',\r\n                      }}\r\n                    >\r\n                      <Iconify\r\n                        icon={'mdi:bell-circle'}\r\n                        color=\"white\"\r\n                        width={32}\r\n                        cursor=\"pointer\"\r\n                        onClick={(e) => handleOpenMenuTable(e, item)}\r\n                        sx={{\r\n                          '&:hover': {\r\n                            color: 'yellow',\r\n                            opacity: [0.9, 0.8, 0.7],\r\n                          },\r\n                        }}\r\n                      />\r\n\r\n                      <Iconify\r\n                        icon={'mdi:undo-variant'}\r\n                        color=\"white\"\r\n                        width={32}\r\n                        cursor=\"pointer\"\r\n                        onClick={() => {\r\n                          handleClickUnCombineTable(item.id, item.name)\r\n                        }}\r\n                        sx={{\r\n                          marginLeft: 3,\r\n                          '&:hover': {\r\n                            color: 'red',\r\n                            opacity: [0.9, 0.8, 0.7],\r\n                          },\r\n                        }}\r\n                      />\r\n                    </Box>\r\n\r\n                    <Box\r\n                      onClick={() => {\r\n                        handleSelectTable(item)\r\n                      }}\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        pt: 1.5,\r\n                        pb: 1.5,\r\n                        '&:hover': {\r\n                          backgroundColor: 'orange',\r\n                          color: 'white',\r\n                          opacity: [0.9, 0.8, 0.7],\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ color: 'white' }}>\r\n                        {EnumStatus.COMBINE.statusValue}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n                        {item.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Paper>\r\n                ) : (\r\n                  <Paper\r\n                    key={item.name}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      py: 2.5,\r\n                      textAlign: 'center',\r\n                      paddingTop: 0,\r\n                      paddingBottom: 0,\r\n                      background: '#c2722b',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        background: '#9d510e',\r\n                        borderBottom: '1px solid #e5e8eb',\r\n                      }}\r\n                    >\r\n                      <Iconify\r\n                        icon={'mdi:bell-circle'}\r\n                        color=\"white\"\r\n                        width={32}\r\n                        cursor=\"pointer\"\r\n                        // onClick={(e) => {\r\n                        //     handleOpenMenu(e, table);\r\n                        // }}\r\n                        sx={{\r\n                          '&:hover': {\r\n                            color: '#40c940',\r\n                            opacity: [0.9, 0.8, 0.7],\r\n                          },\r\n                        }}\r\n                      />\r\n                    </Box>\r\n\r\n                    <Box\r\n                      onClick={() => {\r\n                        onClick(item)\r\n                      }}\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        pt: 1.5,\r\n                        pb: 1.5,\r\n                        '&:hover': {\r\n                          backgroundColor: 'orange',\r\n                          color: 'white',\r\n                          opacity: [0.9, 0.8, 0.7],\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ color: 'white' }}>\r\n                        {EnumStatus.BOOKED.statusValue}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n                        {item.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Paper>\r\n                )\r\n              )}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n      <Popover\r\n        open={Boolean(openMenuTable)}\r\n        anchorEl={openMenuTable}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 160,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleOpenMenuChangeTable}>\r\n          <Iconify icon={'codicon:arrow-swap'} sx={{ mr: 2 }} />\r\n          Chuyển bàn\r\n        </MenuItem>\r\n        <MenuItem onClick={handleOpenModalMergeTable}>\r\n          <Iconify icon={'codicon:type-hierarchy'} sx={{ mr: 2 }} />\r\n          Ghép bàn\r\n        </MenuItem>\r\n        <MenuItem onClick={handleCloseTable}>\r\n          <Iconify icon={'charm:cross'} sx={{ mr: 2 }} />\r\n          Đóng Bàn\r\n        </MenuItem>\r\n      </Popover>\r\n\r\n      <ModalChangeTable\r\n        openModalChangeTable={openModalChangeTable}\r\n        emptyTable={emptyTable}\r\n        currentTable={currentTable}\r\n        handleCloseModal={handleCloseModal}\r\n        handleSelectTableChange={handleSelectTableChange}\r\n        selectTable={selectTable}\r\n        handleChangeTable={handleChangeTable}\r\n      />\r\n      <ModalMergeTable\r\n        openModalMergeTable={openModalMergeTable}\r\n        currentTable={currentTable}\r\n        handleCloseModal={handleCloseModal}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  Typography,\r\n  Stack,\r\n  Grid,\r\n  Tooltip,\r\n  tooltipClasses,\r\n  Button,\r\n} from '@mui/material'\r\n\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport Helper from 'utils/Helper'\r\n\r\nimport { COUDINARY } from 'constants/global'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nimport {\r\n  setDataLoading,\r\n  setOutStockProduct,\r\n  restoreOutStockProduct,\r\n} from 'app/restaurantSlice'\r\n\r\nconst LightTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 14,\r\n  },\r\n}))\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppProductList({\r\n  handleOpenModalOrder,\r\n  checkSearchEmpty,\r\n  ...other\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const restaurantsData = useSelector((state) => state.baseData.data)\r\n\r\n  const productsData = restaurantsData.products\r\n  const productsSearchData = restaurantsData.productsSearch\r\n\r\n  let productsSearch\r\n\r\n  if (productsSearchData.length) {\r\n    productsSearch = productsSearchData\r\n  } else if (checkSearchEmpty) {\r\n    productsSearch = []\r\n  } else {\r\n    productsSearch = productsData\r\n  }\r\n\r\n  const handleSetOutStockProduct = (product) => {\r\n    Swal.fire({\r\n      title: `Bạn có chắc muốn đóng món ${product.productTitle} vì hết hàng?`,\r\n      text: 'Kiểm tra kỹ thông tin và tình trạng món ăn trước khi xác nhận',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Đồng ý',\r\n      cancelButtonText: 'Hủy',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(setDataLoading(true))\r\n        dispatch(setOutStockProduct(product.productId)).then(() => {\r\n          dispatch(setDataLoading(false))\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleRestoreProduct = (product) => {\r\n    Swal.fire({\r\n      title: `Bạn có chắc muốn mở bán ${product.productTitle}?`,\r\n      text: 'Kiểm tra kỹ thông tin và tình trạng món ăn trước khi xác nhận',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Đồng ý',\r\n      cancelButtonText: 'Hủy',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(setDataLoading(true))\r\n        dispatch(restoreOutStockProduct(product.productId)).then(() => {\r\n          dispatch(setDataLoading(false))\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} {...other} sx={{ p: 2 }}>\r\n      {productsSearch &&\r\n        productsSearch.map((item) => (\r\n          <Grid key={item.productId} item xs={3} sm={3} md={3}>\r\n            <Card\r\n              sx={{\r\n                '&:hover': { boxShadow: '0px 2px 5px rgb(98 108 116 / 20%)' },\r\n              }}\r\n            >\r\n              {item.outStock && (\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    backgroundColor: 'rgba(0,0,0,0.3)',\r\n                    zIndex: 100000,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      fontSize: '20px',\r\n                      fontWeight: '700',\r\n                      color: 'red',\r\n                    }}\r\n                  >\r\n                    HẾT HÀNG\r\n                  </p>\r\n                  <Button\r\n                    sx={{\r\n                      color: 'white',\r\n                      backgroundColor: '#7266ba',\r\n                      width: '100px',\r\n                      height: '36px',\r\n                      padding: '6px 12px',\r\n                      fontSize: '16px',\r\n                      '&:hover': {\r\n                        color: '#white',\r\n                        backgroundColor: '#5b509a',\r\n                      },\r\n                    }}\r\n                    onClick={() => {\r\n                      handleRestoreProduct(item)\r\n                    }}\r\n                  >\r\n                    Mở bán\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <Iconify\r\n                icon={'material-symbols:close'}\r\n                title=\"Đóng món\"\r\n                placement=\"top\"\r\n                position=\"absolute\"\r\n                top=\"5px\"\r\n                right=\"5px\"\r\n                width={25}\r\n                padding={0.4}\r\n                cursor=\"pointer\"\r\n                sx={{\r\n                  borderRadius: '50%',\r\n                  color: 'transparent',\r\n                  '&:hover': {\r\n                    color: 'white',\r\n                    backgroundColor: '#7266ba',\r\n                    border: '1px solid white',\r\n                  },\r\n                  zIndex: 100000,\r\n                }}\r\n                onClick={() => {\r\n                  handleSetOutStockProduct(item)\r\n                }}\r\n              />\r\n              <Box\r\n                sx={{\r\n                  pt: '100%',\r\n                  position: 'relative',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    top: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    objectFit: 'cover',\r\n                    position: 'absolute',\r\n                  }}\r\n                  alt={item.productTitle}\r\n                  src={\r\n                    COUDINARY.url +\r\n                    '/' +\r\n                    COUDINARY.SCALE_IMAGE_180_180 +\r\n                    '/' +\r\n                    item.productAvatar.fileFolder +\r\n                    '/' +\r\n                    item.productAvatar.fileName\r\n                  }\r\n                  onClick={() => {\r\n                    handleOpenModalOrder(item.productId)\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Stack\r\n                spacing={2}\r\n                sx={{ pb: 1, pl: 0.5, pr: 0.5, textAlign: 'center' }}\r\n              >\r\n                <LightTooltip title={item.productTitle} placement=\"top\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    noWrap\r\n                    sx={{\r\n                      color: '#4b4086',\r\n                      textTransform: 'uppercase',\r\n                      fontWeight: 'bolder',\r\n                      fontFamily: 'fontkhachhang',\r\n                      cursor: 'pointer',\r\n                      '&:hover': {\r\n                        color: '#f14a50',\r\n                      },\r\n                    }}\r\n                    onClick={() => {\r\n                      handleOpenModalOrder(item.productId)\r\n                    }}\r\n                  >\r\n                    {item.productTitle}\r\n                  </Typography>\r\n                </LightTooltip>\r\n\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                  sx={{\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 'bolder',\r\n                    color: '#4b4086',\r\n                    mt: '0px !important',\r\n                    fontFamily: 'sans-serif',\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      fontWeight: 'bolder',\r\n                      color: '#4b4086',\r\n                      fontFamily: 'sans-serif',\r\n                    }}\r\n                  >\r\n                    &nbsp;\r\n                    {Helper.formatCurrencyToVND(item.price)}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{\r\n                      color: '#4b4086',\r\n                      fontFamily: 'fontkhachhang',\r\n                    }}\r\n                  >\r\n                    {item.unitTitle}\r\n                  </Typography>\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  )\r\n}\r\n","export const BillStatus = Object.freeze({\r\n  ORDERING: { status: 'ORDERING', statusValue: 'Đang order' },\r\n  TEMPORARY: { status: 'TEMPORARY', statusValue: 'Bill tạm' },\r\n  CANCEL: { status: 'CANCEL', statusValue: 'Đã huỷ' },\r\n  PAID: { status: 'PAID', statusValue: 'Đã thanh toán' },\r\n})\r\n","import React from 'react'\r\nimport { Typography, Divider, Button, Fade, Box, Modal } from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport Helper from 'utils/Helper'\r\nimport { useSelector } from 'react-redux'\r\nimport { BillStatus } from 'constants/BillStatus'\r\nimport Images from 'constants/images'\r\n\r\nexport default function ModalDetailBill({\r\n  openModalBillHistory,\r\n  closeModalBillHistory,\r\n}) {\r\n  const baseData = useSelector((state) => state.baseData.data)\r\n  const currentBill = baseData.currentBill\r\n  const currenrOrderitemsBill = baseData.currenrOrderitemsBill\r\n\r\n  const handleRePrintBill = () => {\r\n    setTimeout(() => {\r\n      const content = document.getElementById('rePrintBillPapperContent')\r\n      const pri = document.getElementById('rePrintBillPapper').contentWindow\r\n      pri.document.open()\r\n      pri.document.write(content.innerHTML)\r\n      pri.document.close()\r\n      pri.focus()\r\n      pri.print()\r\n    }, 0)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={openModalBillHistory}\r\n        onClose={closeModalBillHistory}\r\n        closeAfterTransition\r\n        disableAutoFocus\r\n      >\r\n        <Fade in={openModalBillHistory}>\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              left: '50%',\r\n              transform: 'translate(-50%, -50%)',\r\n              width: '1200px',\r\n              bgcolor: 'background.paper',\r\n              border: '2px solid #d8d8df',\r\n              borderRadius: '12px',\r\n              boxShadow: 24,\r\n              p: 3,\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <Iconify\r\n              icon={'material-symbols:close'}\r\n              position=\"absolute\"\r\n              top=\"-10px\"\r\n              right=\"-10px\"\r\n              bgcolor=\"white\"\r\n              color=\"#5A5A72\"\r\n              borderRadius=\"50%\"\r\n              border=\"1px solid #d8d8df\"\r\n              width={36}\r\n              padding={0.6}\r\n              cursor=\"pointer\"\r\n              boxShadow=\"rgba(0, 0, 0, 0.2) 0px 2px 12px 0px\"\r\n              sx={{\r\n                '&:hover': {\r\n                  color: '#131318',\r\n                  bgcolor: '#EBEBEF',\r\n                  border: '1px solid #B9B9c6',\r\n                },\r\n              }}\r\n              onClick={closeModalBillHistory}\r\n            />\r\n\r\n            <div className=\"row\">\r\n              <Typography\r\n                id=\"transition-modal-title\"\r\n                variant=\"h6\"\r\n                component=\"h2\"\r\n                sx={{\r\n                  color: '#53382c',\r\n                  textTransform: 'uppercase',\r\n                  fontWeight: 'bolder',\r\n                  fontFamily: 'fontkhachhang',\r\n                }}\r\n              >\r\n                Chi tiết hoá đơn {currentBill.tableName}\r\n              </Typography>\r\n            </div>\r\n\r\n            <div className=\"col-12 row row-bill-detail\">\r\n              <div className=\"col-2 d-flex\">Số: {currentBill.id}</div>\r\n              <div className=\"col-4 d-flex justify-content-center\">\r\n                Ngày: {currentBill.createdAt}\r\n              </div>\r\n              <div className=\"col-3 d-flex justify-content-center\">\r\n                Nhân viên: {currentBill.staffName}\r\n              </div>\r\n              <div className=\"col-3 d-flex justify-content-end\">\r\n                Trạng thái:{' '}\r\n                {currentBill.status === BillStatus.ORDERING.status\r\n                  ? BillStatus.ORDERING.statusValue\r\n                  : currentBill.status === BillStatus.TEMPORARY.status\r\n                  ? BillStatus.TEMPORARY.statusValue\r\n                  : currentBill.status === BillStatus.CANCEL.status\r\n                  ? BillStatus.CANCEL.statusValue\r\n                  : BillStatus.PAID.statusValue}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-12 row row-bill-detail\"\r\n              style={{ overflow: 'auto', maxHeight: '375px', padding: 0 }}\r\n            >\r\n              <table className=\"table table-striped table-hover table-border table-bill-detail\">\r\n                <thead style={{ color: '#fff' }}>\r\n                  <tr className=\"\">\r\n                    <th className=\"text-start\">Sản phẩm</th>\r\n                    <th className=\"text-center\">Số lượng</th>\r\n                    <th className=\"text-end\">Giá</th>\r\n                    <th className=\"text-end\">Thành tiền</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currenrOrderitemsBill &&\r\n                    currenrOrderitemsBill.map((item) => (\r\n                      <tr key={item.id}>\r\n                        <td className=\"text-start\">{item.productTitle}</td>\r\n                        <td className=\"text-center\">{item.quantity}</td>\r\n                        <td className=\"text-end\">\r\n                          {Helper.formatCurrencyToVND(item.price)}\r\n                        </td>\r\n                        <td className=\"text-end\">\r\n                          {Helper.formatCurrencyToVND(item.amount)}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-12 row row-bill-detail\">\r\n              <div className=\"col-3 col-bill-detail\">\r\n                Tổng tiền: {Helper.formatCurrencyToVND(currentBill.orderPrice)}\r\n              </div>\r\n              <div\r\n                className=\"col-3 col-bill-detail\"\r\n                style={{ color: '#f65a6d', fontSize: 16 }}\r\n              >\r\n                Phụ thu: {currentBill.chargePercent}% + &nbsp;\r\n                {Helper.formatCurrencyToVND(currentBill.chargeMoney)}\r\n              </div>\r\n              <div\r\n                className=\"col-3 col-bill-detail\"\r\n                style={{ color: '#0ee12a', fontSize: 16 }}\r\n              >\r\n                Giảm giá: {currentBill.discountPercent}% - &nbsp;\r\n                {Helper.formatCurrencyToVND(currentBill.discountMoney)}\r\n              </div>\r\n              <div\r\n                className=\"col-3 col-bill-detail justify-content-end\"\r\n                style={{ color: '#f6d551', fontSize: 24 }}\r\n              >\r\n                Chốt đơn: &nbsp;\r\n                <b>{Helper.formatCurrencyToVND(currentBill.totalAmount)}</b>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex justify-content-center align-items-center mt-2\">\r\n              <div\r\n                className=\"row d-flex justify-content-center align-items-center\"\r\n                style={{ width: '200px' }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    color: 'white',\r\n                    backgroundColor: '#4B4086',\r\n                    border: '1px solid #4B4086',\r\n                    mt: 2,\r\n                    '&:hover': {\r\n                      backgroundColor: 'white',\r\n                      color: '#7266ba',\r\n                    },\r\n                  }}\r\n                  onClick={handleRePrintBill}\r\n                >\r\n                  In Lại Hoá Đơn\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      {currentBill && (\r\n        <iframe\r\n          title=\"helo\"\r\n          id=\"rePrintBillPapper\"\r\n          style={{ height: '0px', width: '0px', position: 'absolute' }}\r\n        >\r\n          <div id=\"rePrintBillPapperContent\">\r\n            <div\r\n              className=\"invoice-POS\"\r\n              style={{ textAlign: 'center', margin: 0, padding: 0 }}\r\n            >\r\n              <center id=\"top\">\r\n                <img\r\n                  src={Images.LOADING_LOGO}\r\n                  alt=\"Logo\"\r\n                  height=\"50\"\r\n                  style={{ margin: 0 }}\r\n                />\r\n                <h2 style={{ margin: 0 }}>White Lotus Restaurant</h2>\r\n              </center>\r\n\r\n              <div id=\"mid\">\r\n                <div className=\"info\">\r\n                  <p>\r\n                    ĐC : 28 Nguyễn Tri Phương, phường Phú Nhuận, thành phố Huế\r\n                    <br />\r\n                    Email : whitelotusrestaurant@gmail.com\r\n                    <br />\r\n                    Điện thoại: 0961133348\r\n                    <br />\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <h3 style={{ margin: 0, padding: 0 }}>HÓA ĐƠN BÁN HÀNG</h3>\r\n              <h3 style={{ margin: 0 }}>{currentBill.tableName}</h3>\r\n\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td>\r\n                      <p>Ngày: {Helper.formatDate(new Date())}</p>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <p>Số: {currentBill.id}</p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td colSpan={2}>\r\n                      <p>Giờ: {new Date().toLocaleTimeString()}</p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td colSpan={2}>\r\n                      <p>Thu ngân: {currentBill.staffName}</p>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <table\r\n                style={{\r\n                  width: '100%',\r\n                  border: '1px dashed black',\r\n                  borderCollapse: 'collapse',\r\n                }}\r\n                className=\"tableBill\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <th style={{ border: '1px dashed black' }}>\r\n                      <p style={{ textAlign: 'left' }}>MẶT HÀNG</p>\r\n                    </th>\r\n                    <th style={{ border: '1px dashed black' }}>\r\n                      <p style={{ textAlign: 'center' }}>SL</p>\r\n                    </th>\r\n                    <th\r\n                      style={{ textAlign: 'right', border: '1px dashed black' }}\r\n                    >\r\n                      <p>GIÁ</p>\r\n                    </th>\r\n                    <th\r\n                      style={{ textAlign: 'right', border: '1px dashed black' }}\r\n                    >\r\n                      <p>TỔNG</p>\r\n                    </th>\r\n                  </tr>\r\n                  {currenrOrderitemsBill &&\r\n                    currenrOrderitemsBill.map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'left',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.productTitle}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'center',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.quantity}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'right',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.price.toLocaleString()}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'right',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.amount.toLocaleString()}</p>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <h4>Giảm giá:</h4>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h4>\r\n                        {Helper.formatCurrencyToVND(currentBill.discountMoney)}\r\n                      </h4>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h4>Phụ thu:</h4>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h4>\r\n                        {Helper.formatCurrencyToVND(currentBill.chargeMoney)}\r\n                      </h4>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h3>Tổng tiền:</h3>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h3>\r\n                        {Helper.formatCurrencyToVND(currentBill.totalAmount)}\r\n                      </h3>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"bot\">\r\n                <div id=\"legalcopy\">\r\n                  <p className=\"legal\">\r\n                    <strong>Cảm ơn Quý Khách, hẹn gặp lại!</strong>&nbsp;\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </iframe>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Stack, Tooltip, tooltipClasses, Button } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport Helper from 'utils/Helper'\r\nimport { BillStatus } from 'constants/BillStatus'\r\n\r\nimport {\r\n  setDataLoading,\r\n  getBillsByDay,\r\n  updateListBillShow,\r\n  getOrderItemsByOrderId,\r\n  updateCurrentBill,\r\n  updateCurrenrOrderitemsBill,\r\n} from 'app/restaurantSlice'\r\n\r\nimport Iconify from 'components/Iconify'\r\nimport { toast } from 'react-toastify'\r\nimport ModalDetailBill from './ModalDetailBill'\r\n\r\nconst LightTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 14,\r\n  },\r\n}))\r\n// ----------------------------------------------------------------------\r\nexport default function AppBillHistoryList({\r\n  handleOpenModalOrder,\r\n  checkSearchEmpty,\r\n  ...other\r\n}) {\r\n  const [state, setState] = useState({\r\n    currentDay: '',\r\n    previousDay: '',\r\n  })\r\n\r\n  const [openModalBillHistory, setOpenModalBillHistory] = useState(false)\r\n\r\n  const getDay = () => {\r\n    let current = new Date()\r\n    let previous = new Date(current.getTime())\r\n    previous.setDate(current.getDate() - 1)\r\n    setState({\r\n      ...state,\r\n      currentDay: Helper.formatDate(current),\r\n      previousDay: Helper.formatDate(previous),\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getDay()\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        erroMessage: error.message,\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const baseData = useSelector((state) => state.baseData.data)\r\n\r\n  const listBillToday = baseData.listBillToday\r\n  const listBillPreviousDay = baseData.listBillPreviousDay\r\n  const listBillShow = baseData.listBillShow\r\n  const currentBill = baseData.currentBill\r\n\r\n  const handleGetBillByDay = () => {\r\n    dispatch(setDataLoading(true))\r\n    dispatch(getBillsByDay())\r\n      .unwrap()\r\n      .then((data) => {\r\n        document.getElementById('bill-value').value = 1\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => {\r\n        dispatch(setDataLoading(false))\r\n      })\r\n  }\r\n\r\n  const handleChangeBillHistoryDay = (e) => {\r\n    let billDayValue = +e.target.value\r\n    if (billDayValue === 1) {\r\n      dispatch(updateListBillShow(listBillToday))\r\n    } else {\r\n      dispatch(updateListBillShow(listBillPreviousDay))\r\n    }\r\n  }\r\n\r\n  const handleViewDetailBill = (bill) => {\r\n    dispatch(getOrderItemsByOrderId(bill.orderId))\r\n      .unwrap()\r\n      .then((orderItems) => {\r\n        dispatch(updateCurrenrOrderitemsBill(orderItems))\r\n        setOpenModalBillHistory(true)\r\n        dispatch(updateCurrentBill(bill))\r\n      })\r\n      .catch(() => {\r\n        toast.error('Lỗi hệ thống, không thể xem bill')\r\n      })\r\n      .finally(() => {\r\n        dispatch(setDataLoading(false))\r\n      })\r\n  }\r\n\r\n  const closeModalBillHistory = () => {\r\n    setOpenModalBillHistory(false)\r\n  }\r\n\r\n  const { currentDay, previousDay } = state\r\n\r\n  return (\r\n    <>\r\n      {openModalBillHistory && currentBill && (\r\n        <ModalDetailBill\r\n          openModalBillHistory={openModalBillHistory}\r\n          closeModalBillHistory={closeModalBillHistory}\r\n        />\r\n      )}\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-end\"\r\n        sx={{\r\n          width: '100%',\r\n          height: 40,\r\n          marginBottom: '5px',\r\n        }}\r\n      >\r\n        <div className=\"col-12 d-flex ms-auto\">\r\n          <div className=\"ms-2 me-2 d-flex justify-content-center align-items-center\">\r\n            Danh sách hóa đơn ngày\r\n          </div>\r\n          <div className=\"me-2\">\r\n            <select\r\n              className=\"form-select select2-container\"\r\n              id=\"bill-value\"\r\n              onChange={handleChangeBillHistoryDay}\r\n            >\r\n              <option value=\"1\">{currentDay}</option>\r\n              <option value=\"2\">{previousDay}</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"me-2\">\r\n            <Button\r\n              sx={{\r\n                color: 'white',\r\n                backgroundColor: '#7266ba',\r\n                width: 'auto',\r\n                height: '37.5px',\r\n                padding: '6px 12px',\r\n                fontSize: '16px',\r\n                '&:hover': {\r\n                  color: '#white',\r\n                  backgroundColor: '#5b509a',\r\n                },\r\n              }}\r\n              onClick={() => {\r\n                handleGetBillByDay()\r\n              }}\r\n            >\r\n              Lấy hoá đơn\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Stack>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-end\"\r\n        sx={{\r\n          width: '100%',\r\n          // height: 40,\r\n        }}\r\n      >\r\n        <div className=\"col-sm-12\">\r\n          <div className=\"card card-table\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-12\"></div>\r\n              <div className=\"table-responsive noSwipe col-12\">\r\n                <table id=\"tbBill\" className=\"table table-striped table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-center\">#</th>\r\n                      <th className=\"text-center\">Bàn</th>\r\n                      <th className=\"text-center\">Thời gian</th>\r\n                      <th className=\"text-center\">Tên nhân viên</th>\r\n                      <th className=\"text-center\">Tổng tiền</th>\r\n                      <th className=\"text-center\">Trạng thái</th>\r\n                      <th className=\"text-center\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {listBillShow &&\r\n                      listBillShow.map((item) => (\r\n                        <tr key={item.id}>\r\n                          <td>{item.id}</td>\r\n                          <td>{item.tableName}</td>\r\n                          <td>{item.createdAt}</td>\r\n                          <td>{item.staffName}</td>\r\n                          <td className=\"text-end\">\r\n                            {Helper.formatCurrencyToVND(item.totalAmount)}\r\n                          </td>\r\n                          <td>\r\n                            {item.status === BillStatus.ORDERING.status\r\n                              ? BillStatus.ORDERING.statusValue\r\n                              : item.status === BillStatus.TEMPORARY.status\r\n                              ? BillStatus.TEMPORARY.statusValue\r\n                              : item.status === BillStatus.CANCEL.status\r\n                              ? BillStatus.CANCEL.statusValue\r\n                              : BillStatus.PAID.statusValue}\r\n                          </td>\r\n                          <td>\r\n                            <Iconify\r\n                              icon=\"mdi:eye\"\r\n                              sx={{\r\n                                color: '#7266ba',\r\n                                cursor: 'pointer',\r\n                                '&:hover': {\r\n                                  color: '#5B509A',\r\n                                },\r\n                              }}\r\n                              onClick={() => {\r\n                                handleViewDetailBill(item)\r\n                              }}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Stack>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Stack, Box } from '@mui/material'\r\n\r\nimport AppSearchProduct from './AppSearchProduct'\r\nimport AppTablesList from './AppTableList'\r\nimport AppProductList from './AppProductList'\r\nimport AppBillHistoryList from './AppBillHistoryList'\r\nimport { setProductsSearch } from 'app/restaurantSlice'\r\n\r\nexport default function BodyTableAndMenu({\r\n  checkMenu,\r\n  handleOpenModalOrder,\r\n  handleSelectTable,\r\n  checkTab,\r\n  ...other\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const restaurantsData = useSelector((state) => state.baseData.data)\r\n  const categories = restaurantsData.categories\r\n  const products = restaurantsData.products\r\n  let productList = products\r\n\r\n  const [state, setState] = useState({\r\n    keyword: '',\r\n    categoryId: 0,\r\n  })\r\n\r\n  const [checkSearchEmpty, setCheckSearchEmpty] = useState(false)\r\n\r\n  const handleSearch = async (e) => {\r\n    setState({\r\n      ...state,\r\n      keyword: e.target.value,\r\n    })\r\n\r\n    if (categoryId === 0 && !e.target.value) {\r\n      productList = products\r\n    } else if (!e.target.value) {\r\n      productList = products.filter((item) => item.category.id === categoryId)\r\n    } else if (categoryId === 0) {\r\n      productList = products.filter((item) =>\r\n        item.productTitle.toUpperCase().includes(e.target.value.toUpperCase())\r\n      )\r\n    } else {\r\n      productList = products.filter(\r\n        (item) =>\r\n          item.productTitle\r\n            .toUpperCase()\r\n            .includes(e.target.value.toUpperCase()) &&\r\n          item.category.id === categoryId\r\n      )\r\n    }\r\n\r\n    dispatch(setProductsSearch(productList))\r\n\r\n    if (productList.length === 0) {\r\n      setCheckSearchEmpty(true)\r\n    }\r\n  }\r\n\r\n  const handleChangeCategory = async (e) => {\r\n    setState({\r\n      ...state,\r\n      categoryId: +e.target.value,\r\n    })\r\n    if (!keyword && +e.target.value === 0) {\r\n      productList = products\r\n    } else if (!keyword) {\r\n      productList = products.filter(\r\n        (item) => item.category.id === +e.target.value\r\n      )\r\n    } else if (+e.target.value === 0) {\r\n      productList = products.filter((item) =>\r\n        item.productTitle.toUpperCase().includes(keyword.toUpperCase())\r\n      )\r\n    } else {\r\n      productList = products.filter(\r\n        (item) =>\r\n          item.productTitle.toUpperCase().includes(keyword.toUpperCase()) &&\r\n          item.category.id === +e.target.value\r\n      )\r\n    }\r\n\r\n    dispatch(setProductsSearch(productList))\r\n\r\n    if (productList.length === 0) {\r\n      setCheckSearchEmpty(true)\r\n    }\r\n  }\r\n\r\n  const doSearch = () => {\r\n    if (categoryId === 0) {\r\n      productList = products.filter((item) =>\r\n        item.productTitle.toUpperCase().includes(keyword.toUpperCase())\r\n      )\r\n    } else {\r\n      productList = products.filter(\r\n        (item) =>\r\n          item.productTitle.toUpperCase().includes(keyword.toUpperCase()) &&\r\n          item.category.id === categoryId\r\n      )\r\n    }\r\n\r\n    dispatch(setProductsSearch(productList))\r\n\r\n    if (productList.length === 0) {\r\n      setCheckSearchEmpty(true)\r\n    }\r\n  }\r\n\r\n  const { keyword, categoryId } = state\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        // height: 555,\r\n        height: '90vh',\r\n        overflow: 'hidden',\r\n        padding: '10px',\r\n        backgroundColor: '#F9FAFB',\r\n        borderRadius: '12px',\r\n      }}\r\n      className=\"wrapperBoard\"\r\n    >\r\n      {checkTab.table && (\r\n        <Box\r\n          style={{\r\n            height: '100%',\r\n            overflow: 'auto',\r\n            backgroundColor: '#F9FAFB',\r\n            borderRadius: '12px',\r\n            marginTop: '20px',\r\n            paddingBottom: '15px',\r\n          }}\r\n          className=\"wrapperBoard\"\r\n        >\r\n          <AppTablesList\r\n            handleSelectTable={handleSelectTable}\r\n            title=\"DANH SÁCH\"\r\n          />\r\n        </Box>\r\n      )}\r\n      {checkTab.menu && (\r\n        <>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"flex-end\"\r\n            sx={{\r\n              width: '100%',\r\n              height: 40,\r\n            }}\r\n          >\r\n            <AppSearchProduct\r\n              categories={categories}\r\n              keyword={keyword}\r\n              categoryId={categoryId}\r\n              onFilterName={handleSearch}\r\n              doSearch={doSearch}\r\n              handleChangeCategory={handleChangeCategory}\r\n            />\r\n          </Stack>\r\n          <Box\r\n            style={{\r\n              // height: 495,\r\n              height: '100%',\r\n              overflow: 'auto',\r\n              backgroundColor: '#F9FAFB',\r\n              borderRadius: '12px',\r\n              marginTop: '20px',\r\n              // marginBottom: '60px',\r\n              paddingBottom: '60px',\r\n            }}\r\n            className=\"wrapperBoard\"\r\n          >\r\n            <AppProductList\r\n              checkSearchEmpty={checkSearchEmpty}\r\n              handleOpenModalOrder={(productId) => {\r\n                handleOpenModalOrder(productId)\r\n              }}\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n      {checkTab.billHistory && (\r\n        <Box\r\n          style={{\r\n            height: '100%',\r\n            overflow: 'auto',\r\n            backgroundColor: '#F9FAFB',\r\n            borderRadius: '12px',\r\n            marginTop: '20px',\r\n            paddingBottom: '15px',\r\n          }}\r\n          className=\"wrapperBoard\"\r\n        >\r\n          <AppBillHistoryList />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button } from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function TabOrderItems({ orderTable, closeTable, ...other }) {\r\n  const restaurantsData = useSelector((state) => state.baseData.data)\r\n  const currentTable = restaurantsData.currentTable\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(currentTable).length ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            position: 'relative',\r\n            mt: '4px',\r\n            ml: '10px',\r\n            borderRadius: '15px 15px 0 0',\r\n            backgroundColor: '#F9FAFB',\r\n            color: '#4B4086',\r\n            boxShadow: 'none',\r\n            '&:hover': {\r\n              backgroundColor: '#4B4086',\r\n              color: '#F9FAFB',\r\n            },\r\n          }}\r\n        >\r\n          <Iconify\r\n            icon={'ic:round-table-restaurant'}\r\n            width={20}\r\n            height={50}\r\n            sx={{ mr: 1 }}\r\n          />\r\n          {currentTable ? (\r\n            <>\r\n              {currentTable.name}\r\n              <Iconify\r\n                icon=\"ph:x-circle-thin\"\r\n                sx={{\r\n                  minWidth: '20px',\r\n                  ml: '30px',\r\n                  padding: 0,\r\n                  color: 'red',\r\n                }}\r\n                onClick={closeTable}\r\n              />\r\n            </>\r\n          ) : (\r\n            'Bàn'\r\n          )}\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              position: 'relative',\r\n              mt: '4px',\r\n              ml: '10px',\r\n              borderRadius: '15px 15px 0 0',\r\n              backgroundColor: '#4B4086',\r\n              color: '#F9FAFB',\r\n              boxShadow: 'none',\r\n              '&:hover': {\r\n                backgroundColor: '#F9FAFB',\r\n                color: '#4b4086',\r\n              },\r\n            }}\r\n          >\r\n            <Iconify\r\n              icon={'ic:round-table-restaurant'}\r\n              width={20}\r\n              height={50}\r\n              sx={{ mr: 1 }}\r\n            />\r\n            Bàn\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nexport default function BodyOrderItemsEmpty() {\r\n  return (\r\n    <>\r\n      <Iconify\r\n        icon={'noto-v1:fork-and-knife-with-plate'}\r\n        width=\"100px\"\r\n        height={50}\r\n        sx={{\r\n          position: 'relative',\r\n          ml: '41%',\r\n          mt: '25%',\r\n        }}\r\n      />\r\n      <Typography\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontSize: '20px',\r\n          fontWeight: 'bolder',\r\n          fontFamily: 'sans-serif',\r\n        }}\r\n      >\r\n        Chưa có món nào\r\n      </Typography>\r\n      <Typography\r\n        sx={{\r\n          textAlign: 'center',\r\n          fontSize: '14px',\r\n          fontFamily: 'sans-serif',\r\n        }}\r\n      >\r\n        Vui lòng chọn bàn hoặc món trong thực đơn\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Stack,\r\n  Divider,\r\n  TextField,\r\n  Backdrop,\r\n  Box,\r\n  Modal,\r\n  styled,\r\n  Input,\r\n} from '@mui/material'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport Helper from 'utils/Helper'\r\n\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Images from 'constants/images'\r\n\r\nimport { PropTypes } from 'prop-types'\r\n\r\nimport Slide from '@mui/material/Slide'\r\n\r\nimport { NumericFormat } from 'react-number-format'\r\n\r\nimport { LoadingButton } from '@mui/lab'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { OrderItemStatus } from 'constants/OrderItemStatus'\r\n\r\nimport { updateChangeTableStatus } from 'app/restaurantSlice'\r\n\r\nimport {\r\n  payBill,\r\n  setChangeMoney,\r\n  setDiscount,\r\n  setFees,\r\n  setReceivedCashMoney,\r\n  setReceivedTransferMoney,\r\n  updateTotalAmount,\r\n} from 'app/paymentSlice'\r\nimport { EnumStatus } from 'constants/EnumStatus'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '0',\r\n  right: 0,\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '65%',\r\n  height: '100vh',\r\n  bgcolor: 'background.paper',\r\n  // border: '2px solid #d8d8df',\r\n  borderRadius: '12px',\r\n  boxShadow: 24,\r\n  p: 3,\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    lineHeight: '7px',\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    lineHeight: '5px',\r\n    paddingRight: 0,\r\n    paddingLeft: 0,\r\n  },\r\n}))\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}))\r\n\r\nModalBill.prototype = {\r\n  openBill: PropTypes.bool,\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ModalBill({\r\n  openModalBill,\r\n  handleCloseBill,\r\n  closeTable,\r\n}) {\r\n  const dispatch = useDispatch()\r\n\r\n  const authData = useSelector((state) => state.authData.data)\r\n  const fullName = authData.fullName\r\n\r\n  const paymentData = useSelector((state) => state.paymentData.data)\r\n  const billData = useSelector((state) => state.billData.data)\r\n  const tempBillData = billData.tempBillData\r\n\r\n  const baseData = useSelector((state) => state.baseData.data)\r\n  const currentTable = baseData.currentTable\r\n\r\n  const orderItemData = useSelector((state) => state.orderItemData.data)\r\n  const currentOrderItemsdata = orderItemData.currentOrderItemsdata\r\n\r\n  let currentOrderItemsDONE = []\r\n  let totalAmountBill = 0\r\n\r\n  currentOrderItemsdata.forEach((item) => {\r\n    if (item.status === OrderItemStatus.DELIVERY.status) {\r\n      totalAmountBill += +item.quantity * item.price\r\n      currentOrderItemsDONE.push(item)\r\n    }\r\n  })\r\n\r\n  const [state, setState] = useState({\r\n    loading: false,\r\n  })\r\n\r\n  const [loadingPrintBillTemp, setLoadingPrintBillTemp] = useState(false)\r\n  const [loadingPayBill, setLoadingPayBill] = useState(false)\r\n\r\n  const { loading } = state\r\n  const handleChangeFees = (e) => {\r\n    const fees = e.target.value.length === 0 ? 0 : +e.target.value\r\n\r\n    if (fees >= 0 && fees <= 100) {\r\n      const receivedCashMoney = paymentData.receivedCashMoney\r\n      const receivedTransferMoney = paymentData.receivedTransferMoney\r\n\r\n      const obj = {\r\n        fees,\r\n        totalPrice: orderItemData.totalAmount,\r\n        receivedCashMoney,\r\n        receivedTransferMoney,\r\n      }\r\n\r\n      const setFeesAction = setFees(obj)\r\n      dispatch(setFeesAction)\r\n\r\n      const updateTotalAmountAction = updateTotalAmount(obj)\r\n      dispatch(updateTotalAmountAction)\r\n\r\n      const setChangeMoneyAction = setChangeMoney(obj)\r\n      dispatch(setChangeMoneyAction)\r\n    }\r\n  }\r\n\r\n  const handleChangeDiscount = (e) => {\r\n    const discount = e.target.value.length === 0 ? 0 : +e.target.value\r\n\r\n    if (discount >= 0 && discount <= 100) {\r\n      const receivedCashMoney = paymentData.receivedCashMoney\r\n      const receivedTransferMoney = paymentData.receivedTransferMoney\r\n\r\n      const obj = {\r\n        discount,\r\n        totalPrice: orderItemData.totalAmount,\r\n        receivedCashMoney,\r\n        receivedTransferMoney,\r\n      }\r\n\r\n      const setDiscountAction = setDiscount(obj)\r\n      dispatch(setDiscountAction)\r\n\r\n      const updateTotalAmountAction = updateTotalAmount(obj)\r\n      dispatch(updateTotalAmountAction)\r\n\r\n      const setChangeMoneyAction = setChangeMoney(obj)\r\n      dispatch(setChangeMoneyAction)\r\n    }\r\n  }\r\n\r\n  const handleCashMoney = (e) => {\r\n    const receivedCashMoney =\r\n      e.target.value.length === 0 ? 0 : +e.target.value.replaceAll(',', '')\r\n    const receivedTransferMoney = paymentData.receivedTransferMoney\r\n    const obj = {\r\n      totalPrice: orderItemData.totalAmount,\r\n      receivedCashMoney,\r\n      receivedTransferMoney,\r\n    }\r\n\r\n    const setReceivedCashMoneyAction = setReceivedCashMoney(obj)\r\n    dispatch(setReceivedCashMoneyAction)\r\n\r\n    const setReceivedTransferMoneyAction = setReceivedTransferMoney(obj)\r\n    dispatch(setReceivedTransferMoneyAction)\r\n\r\n    const updateTotalAmountAction = updateTotalAmount(obj)\r\n    dispatch(updateTotalAmountAction)\r\n\r\n    const setChangeMoneyAction = setChangeMoney(obj)\r\n    dispatch(setChangeMoneyAction)\r\n  }\r\n\r\n  const handleTransferMoney = (e) => {\r\n    const receivedTransferMoney =\r\n      e.target.value.length === 0 ? 0 : +e.target.value.replaceAll(',', '')\r\n    const receivedCashMoney = paymentData.receivedCashMoney\r\n\r\n    const obj = {\r\n      totalPrice: orderItemData.totalAmount,\r\n      receivedTransferMoney,\r\n      receivedCashMoney,\r\n    }\r\n\r\n    const setReceivedTransferMoneyAction = setReceivedTransferMoney(obj)\r\n    dispatch(setReceivedTransferMoneyAction)\r\n\r\n    const setReceivedCashMoneyAction = setReceivedCashMoney(obj)\r\n    dispatch(setReceivedCashMoneyAction)\r\n\r\n    const updateTotalAmountAction = updateTotalAmount(obj)\r\n    dispatch(updateTotalAmountAction)\r\n\r\n    const setChangeMoneyAction = setChangeMoney(obj)\r\n    dispatch(setChangeMoneyAction)\r\n  }\r\n\r\n  //In bill tạm\r\n  const handlePayTemp = async () => {\r\n    try {\r\n      setLoadingPrintBillTemp(true)\r\n\r\n      // let billTempData = []\r\n\r\n      // currentOrderItemsdata.forEach((orderItem) => {\r\n      //   if (billTempData.length === 0) {\r\n      //     let obj = Object.assign({}, orderItem)\r\n      //     billTempData.push(obj)\r\n      //   } else {\r\n      //     let exist = false\r\n      //     let itemIndex = -1\r\n\r\n      //     billTempData.forEach((billItem, billIndex) => {\r\n      //       if (orderItem.productId === billItem.productId) {\r\n      //         exist = true\r\n      //         itemIndex = billIndex\r\n      //       }\r\n      //     })\r\n\r\n      //     if (exist) {\r\n      //       const newQuantity =\r\n      //         billTempData[itemIndex].quantity + orderItem.quantity\r\n      //       billTempData[itemIndex].quantity = newQuantity\r\n      //       billTempData[itemIndex].amount = newQuantity * orderItem.price\r\n      //     } else {\r\n      //       let obj = Object.assign({}, orderItem)\r\n      //       billTempData.push(obj)\r\n      //     }\r\n\r\n      //     exist = false\r\n      //     itemIndex = -1\r\n      //   }\r\n      // })\r\n\r\n      // const updateTempBillDataAction = updateTempBillData(billTempData)\r\n      // dispatch(updateTempBillDataAction)\r\n\r\n      setTimeout(() => {\r\n        console.log(document.getElementById('billPapperTemp'))\r\n        const content = document.getElementById('billPapperTempContent')\r\n        const pri = document.getElementById('billPapperTemp').contentWindow\r\n        pri.document.open()\r\n        pri.document.write(content.innerHTML)\r\n        pri.document.close()\r\n        pri.focus()\r\n        pri.print()\r\n        // handlePayMoneyToClose(currentTable.id);\r\n        // moneyReceived = 0\r\n\r\n        setLoadingPrintBillTemp(false)\r\n      }, 500)\r\n    } catch (error) {\r\n      toast.error('Lỗi hệ thống, vui lòng kiểm tra lại dữ liệu!')\r\n    }\r\n  }\r\n\r\n  //Thanh toán bill\r\n  const handlePay = () => {\r\n    if (\r\n      paymentData.receivedTransferMoney + paymentData.receivedCashMoney ===\r\n      0\r\n    ) {\r\n      toast.error('Chưa nhập số tiền!')\r\n      return\r\n    }\r\n\r\n    if (\r\n      paymentData.receivedTransferMoney + paymentData.receivedCashMoney <\r\n      paymentData.totalAmount\r\n    ) {\r\n      toast.error('Số tiền không đủ!')\r\n      return\r\n    }\r\n\r\n    if (paymentData.receivedTransferMoney > paymentData.totalAmount) {\r\n      toast.error('Số tiền chuyển khoản không được vượt quá tổng tiền.')\r\n      return\r\n    }\r\n\r\n    if (paymentData.receivedCashMoney < 0) {\r\n      toast.error('Số tiền khách đưa không được âm.')\r\n      return\r\n    }\r\n\r\n    if (paymentData.receivedTransferMoney < 0) {\r\n      toast.error('Số tiền khách chuyển khoản không được âm.')\r\n      return\r\n    }\r\n\r\n    let obj = {\r\n      orderId: currentTable.orderId,\r\n      chargePercent: paymentData.fees,\r\n      chargeMoney: paymentData.feesMoney,\r\n      discountPercent: paymentData.discount,\r\n      discountMoney: paymentData.discountMoney,\r\n      totalAmount: paymentData.totalAmount,\r\n      receivedTransferMoney: paymentData.receivedTransferMoney,\r\n      receivedCashMoney:\r\n        paymentData.receivedCashMoney - paymentData.changeMoney,\r\n    }\r\n\r\n    setLoadingPayBill(true)\r\n\r\n    setTimeout(() => {\r\n      const content = document.getElementById('billPapperContent')\r\n      const pri = document.getElementById('billPapper').contentWindow\r\n      pri.document.open()\r\n      pri.document.write(content.innerHTML)\r\n      pri.document.close()\r\n      pri.focus()\r\n      pri.print()\r\n      // handlePayMoneyToClose(currentTable.id);\r\n      // moneyReceived = 0\r\n\r\n      setLoadingPrintBillTemp(false)\r\n    }, 0)\r\n\r\n    dispatch(payBill(obj))\r\n      .unwrap()\r\n      .then(() => {\r\n        const objTable = {\r\n          tableId: currentTable.id,\r\n          status: EnumStatus.EMPTY.status,\r\n          statusValue: EnumStatus.EMPTY.statusValue,\r\n        }\r\n\r\n        const updateTableStatusAction = updateChangeTableStatus(objTable)\r\n        dispatch(updateTableStatusAction)\r\n\r\n        closeTable()\r\n        handleCloseBill()\r\n\r\n        setLoadingPayBill(false)\r\n        toast.success('Đã thanh toán ' + currentTable.name)\r\n      })\r\n      .catch(() => {\r\n        toast.error(`Thanh toán thất bại, vui lòng kiểm tra dữ liệu`)\r\n        setLoadingPayBill(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={openModalBill}\r\n        onClose={handleCloseBill}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n        disableAutoFocus\r\n      >\r\n        <Slide direction=\"left\" in={openModalBill}>\r\n          <Box sx={style}>\r\n            <Iconify\r\n              icon={'material-symbols:close'}\r\n              position=\"absolute\"\r\n              top=\"10px\"\r\n              right=\"10px\"\r\n              bgcolor=\"white\"\r\n              color=\"#5A5A72\"\r\n              borderRadius=\"50%\"\r\n              width={35}\r\n              padding={0.6}\r\n              cursor=\"pointer\"\r\n              sx={{\r\n                '&:hover': {\r\n                  color: '#131318',\r\n                  bgcolor: '#EBEBEF',\r\n                  border: '1px solid #B9B9c6',\r\n                  boxShadow: 'rgba(0, 0, 0, 0.2) 0px 2px 12px 0px',\r\n                },\r\n              }}\r\n              onClick={handleCloseBill}\r\n            />\r\n            <Typography\r\n              id=\"transition-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n              sx={{\r\n                color: 'black',\r\n                fontWeight: 'bolder',\r\n                fontFamily: 'fontkhachhang',\r\n                mt: -1,\r\n              }}\r\n            >\r\n              {currentTable && <>Phiếu thanh toán - {currentTable.name}</>}\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={7} md={7} lg={7}>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"flex-start\"\r\n                  sx={{\r\n                    my: 2,\r\n                  }}\r\n                >\r\n                  <Iconify icon={'material-symbols:frame-person-sharp'} />\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      ml: 1,\r\n                      fontSize: '14px',\r\n                      color: '#333333',\r\n                      fontWeight: 'bolder',\r\n                    }}\r\n                  >\r\n                    Khách lẻ\r\n                  </Typography>\r\n                </Stack>\r\n                <Box\r\n                  sx={{\r\n                    overflow: 'auto',\r\n                    position: 'relative',\r\n                    maxHeight: '580px',\r\n                    minHeight: '580px',\r\n                  }}\r\n                >\r\n                  <TableContainer component={Paper}>\r\n                    <Table\r\n                      sx={{ minWidth: '50%' }}\r\n                      aria-label=\"customized table\"\r\n                    >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <StyledTableCell align=\"center\">#</StyledTableCell>\r\n                          <StyledTableCell align=\"center\">Món</StyledTableCell>\r\n                          <StyledTableCell align=\"center\">SL</StyledTableCell>\r\n                          <StyledTableCell align=\"right\">Giá</StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            Thành tiền\r\n                          </StyledTableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {tempBillData &&\r\n                          tempBillData.map((orderItem, index) => (\r\n                            <StyledTableRow key={index + 1}>\r\n                              <StyledTableCell\r\n                                align=\"center\"\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                              >\r\n                                {index + 1}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell align=\"center\">\r\n                                {orderItem.productTitle}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell align=\"center\">\r\n                                {orderItem.quantity}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell align=\"right\">\r\n                                {Helper.formatCurrencyToVND(orderItem.price)}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                sx={{ paddingRight: '5px !important' }}\r\n                                align=\"right\"\r\n                              >\r\n                                {Helper.formatCurrencyToVND(\r\n                                  orderItem.price * orderItem.quantity\r\n                                )}\r\n                              </StyledTableCell>\r\n                            </StyledTableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Box>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={5}\r\n                md={5}\r\n                lg={5}\r\n                sx={{ textAlign: 'justify', mt: 6 }}\r\n              >\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      mr: 1,\r\n                      fontSize: '14px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    {new Date().toLocaleString()}\r\n                  </Typography>\r\n                  <Iconify icon={'uil:calender'} />\r\n                  <Iconify icon={'mdi:alarm-clock'} />\r\n                </Stack>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Tổng tiền hàng:\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value={orderItemData.totalAmount}\r\n                    thousandSeparator=\",\"\r\n                    customInput={TextField}\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                      disableUnderline: true,\r\n                      readOnly: true,\r\n                    }}\r\n                    sx={{\r\n                      input: {\r\n                        color: 'red',\r\n                        backgroundColor: 'white',\r\n                        fontSize: '17px',\r\n                        padding: ' 0px',\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Giảm Giá (%):\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value=\"\"\r\n                    isAllowed={(values) => {\r\n                      const { formattedValue, floatValue } = values\r\n                      return (\r\n                        formattedValue === '' ||\r\n                        (floatValue > 0 && floatValue <= 100)\r\n                      )\r\n                    }}\r\n                    // allowNegative={false}\r\n                    thousandSeparator=\",\"\r\n                    customInput={Input}\r\n                    // inputProps={{ maxLength: 3, max: 100 }}\r\n                    placeholder=\"0%\"\r\n                    sx={{\r\n                      ml: 2,\r\n                      input: {\r\n                        color: 'black',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '17px',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                    onInput={handleChangeDiscount}\r\n                  />\r\n                </Stack>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Phí dịch vụ (%):\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value=\"\"\r\n                    isAllowed={(values) => {\r\n                      const { formattedValue, floatValue } = values\r\n                      return (\r\n                        formattedValue === '' ||\r\n                        (floatValue > 0 && floatValue <= 100)\r\n                      )\r\n                    }}\r\n                    thousandSeparator=\",\"\r\n                    customInput={Input}\r\n                    placeholder=\"0%\"\r\n                    sx={{\r\n                      ml: 2,\r\n                      input: {\r\n                        color: 'black',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '17px',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                    onChange={handleChangeFees}\r\n                    // onValueChange={handleChangeFees}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Tổng tiền :\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value={paymentData.totalAmount}\r\n                    thousandSeparator=\",\"\r\n                    customInput={TextField}\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                      disableUnderline: true,\r\n                      readOnly: true,\r\n                    }}\r\n                    sx={{\r\n                      input: {\r\n                        color: 'red',\r\n                        backgroundColor: 'white',\r\n                        fontSize: '17px',\r\n                        padding: ' 0px',\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Tiền mặt thanh toán:\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value=\"\"\r\n                    thousandSeparator=\",\"\r\n                    customInput={Input}\r\n                    placeholder=\"0\"\r\n                    sx={{\r\n                      ml: 2,\r\n                      input: {\r\n                        color: 'black',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '17px',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                    onChange={handleCashMoney}\r\n                    // onValueChange={({ floatValue }) => {\r\n                    //   return setState({\r\n                    //     ...state,\r\n                    //     moneyReceived: floatValue,\r\n                    //     changeMoney: floatValue - totalAmount,\r\n                    //   })\r\n                    // }}\r\n                  />\r\n                </Stack>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Khách chuyển khoản:\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value=\"\"\r\n                    thousandSeparator=\",\"\r\n                    customInput={Input}\r\n                    placeholder=\"0\"\r\n                    sx={{\r\n                      ml: 2,\r\n                      input: {\r\n                        color: 'black',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '17px',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                    onChange={handleTransferMoney}\r\n                    // onValueChange={({ floatValue }) => {\r\n                    //   return setState({\r\n                    //     ...state,\r\n                    //     moneyReceived: floatValue,\r\n                    //     changeMoney: floatValue - totalAmount,\r\n                    //   })\r\n                    // }}\r\n                  />\r\n                </Stack>\r\n\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography\r\n                    variant=\"transition-modal-description\"\r\n                    sx={{\r\n                      mr: 1,\r\n                      fontSize: '17px',\r\n                      color: '#333333',\r\n                      fontWeight: 'normal',\r\n                    }}\r\n                  >\r\n                    Tiền thừa trả khách:\r\n                  </Typography>\r\n                  <NumericFormat\r\n                    value={paymentData.changeMoney}\r\n                    thousandSeparator=\",\"\r\n                    customInput={TextField}\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                      disableUnderline: true,\r\n                      readOnly: true,\r\n                    }}\r\n                    sx={{\r\n                      input: {\r\n                        color: 'green',\r\n                        backgroundColor: 'white',\r\n                        fontSize: '17px',\r\n                        padding: ' 0px',\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'right',\r\n                        width: '150px',\r\n                      },\r\n                    }}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ mb: 2 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <LoadingButton\r\n                    loading={loading}\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                      color: 'white',\r\n                      backgroundColor: '#B55D28',\r\n                      border: '1px solid #B55D28',\r\n                      width: 200,\r\n                      margin: '0 10%',\r\n                      '&:hover': {\r\n                        backgroundColor: 'white',\r\n                        color: '#d0181b',\r\n                      },\r\n                    }}\r\n                    onClick={handlePayTemp}\r\n                  >\r\n                    <Iconify\r\n                      icon={'ri:money-dollar-circle-line'}\r\n                      width=\"25px\"\r\n                      height={50}\r\n                      sx={{\r\n                        mr: 1,\r\n                      }}\r\n                    />\r\n                    In tạm\r\n                  </LoadingButton>\r\n                  <LoadingButton\r\n                    loading={loading}\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                      color: 'white',\r\n                      backgroundColor: '#28B44F',\r\n                      border: '1px solid #28B44F',\r\n                      width: 250,\r\n                      '&:hover': {\r\n                        backgroundColor: 'white',\r\n                        color: '#d0181b',\r\n                      },\r\n                    }}\r\n                    onClick={handlePay}\r\n                  >\r\n                    <Iconify\r\n                      icon={'ri:money-dollar-circle-line'}\r\n                      width=\"25px\"\r\n                      height={50}\r\n                      sx={{\r\n                        mr: 1,\r\n                      }}\r\n                    />\r\n                    Thanh toán\r\n                  </LoadingButton>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Slide>\r\n      </Modal>\r\n\r\n      {currentTable && (\r\n        <iframe\r\n          title=\"helo\"\r\n          id=\"billPapper\"\r\n          style={{ height: '0px', width: '0px', position: 'absolute' }}\r\n        >\r\n          <div id=\"billPapperContent\">\r\n            <div\r\n              className=\"invoice-POS\"\r\n              style={{ textAlign: 'center', margin: 0, padding: 0 }}\r\n            >\r\n              <center id=\"top\">\r\n                <img\r\n                  src={Images.LOADING_LOGO}\r\n                  alt=\"Logo\"\r\n                  height=\"50\"\r\n                  style={{ margin: 0 }}\r\n                />\r\n                <h2 style={{ margin: 0 }}>White Lotus Restaurant</h2>\r\n              </center>\r\n\r\n              <div id=\"mid\">\r\n                <div className=\"info\">\r\n                  <p>\r\n                    ĐC : 28 Nguyễn Tri Phương, phường Phú Nhuận, thành phố Huế\r\n                    <br />\r\n                    Email : whitelotusrestaurant@gmail.com\r\n                    <br />\r\n                    Điện thoại: 0961133348\r\n                    <br />\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <h3 style={{ margin: 0, padding: 0 }}>HÓA ĐƠN BÁN HÀNG</h3>\r\n              <h3 style={{ margin: 0 }}>{currentTable.name}</h3>\r\n\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td>\r\n                      <p>Ngày: {Helper.formatDate(new Date())}</p>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <p>Số: {currentTable.orderId}</p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td colSpan={2}>\r\n                      <p>Giờ: {new Date().toLocaleTimeString()}</p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td colSpan={2}>\r\n                      <p>Thu ngân: {fullName}</p>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <table\r\n                style={{\r\n                  width: '100%',\r\n                  border: '1px dashed black',\r\n                  borderCollapse: 'collapse',\r\n                }}\r\n                className=\"tableBill\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <th style={{ border: '1px dashed black' }}>\r\n                      <p style={{ textAlign: 'left' }}>MẶT HÀNG</p>\r\n                    </th>\r\n                    <th style={{ border: '1px dashed black' }}>\r\n                      <p style={{ textAlign: 'center' }}>SL</p>\r\n                    </th>\r\n                    <th\r\n                      style={{ textAlign: 'right', border: '1px dashed black' }}\r\n                    >\r\n                      <p>GIÁ</p>\r\n                    </th>\r\n                    <th\r\n                      style={{ textAlign: 'right', border: '1px dashed black' }}\r\n                    >\r\n                      <p>TỔNG</p>\r\n                    </th>\r\n                  </tr>\r\n                  {tempBillData &&\r\n                    tempBillData.map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'left',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.productTitle}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'center',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.quantity}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'right',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.price.toLocaleString()}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'right',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.amount.toLocaleString()}</p>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <h4>Giảm giá:</h4>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h4>\r\n                        {Helper.formatCurrencyToVND(paymentData.discountMoney)}\r\n                      </h4>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h4>Phụ thu:</h4>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h4>\r\n                        {Helper.formatCurrencyToVND(paymentData.feesMoney)}\r\n                      </h4>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h3>Tổng tiền:</h3>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h3>\r\n                        {Helper.formatCurrencyToVND(paymentData.totalAmount)}\r\n                      </h3>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"bot\">\r\n                <div id=\"legalcopy\">\r\n                  <p className=\"legal\">\r\n                    <strong>Cảm ơn Quý Khách, hẹn gặp lại!</strong>&nbsp;\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </iframe>\r\n      )}\r\n\r\n      {currentTable && (\r\n        <iframe\r\n          title=\"helo\"\r\n          id=\"billPapperTemp\"\r\n          style={{ height: '0px', width: '0px', position: 'absolute' }}\r\n        >\r\n          <div id=\"billPapperTempContent\">\r\n            <div\r\n              className=\"invoice-POS\"\r\n              style={{ textAlign: 'center', margin: 0, padding: 0 }}\r\n            >\r\n              <center id=\"top\">\r\n                <img\r\n                  src={Images.LOADING_LOGO}\r\n                  alt=\"Logo\"\r\n                  height=\"50\"\r\n                  style={{ margin: 0 }}\r\n                />\r\n                <h2 style={{ margin: 0 }}>White Lotus Restaurant</h2>\r\n              </center>\r\n\r\n              <div id=\"mid\">\r\n                <div className=\"info\">\r\n                  <p>\r\n                    ĐC : 28 Nguyễn Tri Phương, phường Phú Nhuận, thành phố Huế\r\n                    <br />\r\n                    Email : whitelotusrestaurant@gmail.com\r\n                    <br />\r\n                    Điện thoại: 0961133348\r\n                    <br />\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <h3 style={{ margin: 0, padding: 0 }}>HÓA ĐƠN IN TẠM</h3>\r\n              <h3 style={{ margin: 0 }}>{currentTable.name}</h3>\r\n\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td>\r\n                      <p>Ngày: {Helper.formatDate(new Date())}</p>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <p>Số: {currentTable.orderId}</p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td colSpan={2}>\r\n                      <p>Giờ: {new Date().toLocaleTimeString()}</p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ fontSize: '13px' }}>\r\n                    <td colSpan={2}>\r\n                      <p>Thu ngân: {fullName}</p>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <table\r\n                style={{\r\n                  width: '100%',\r\n                  border: '1px dashed black',\r\n                  borderCollapse: 'collapse',\r\n                }}\r\n                className=\"tableBill\"\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <th style={{ border: '1px dashed black' }}>\r\n                      <p style={{ textAlign: 'left' }}>MẶT HÀNG</p>\r\n                    </th>\r\n                    <th style={{ border: '1px dashed black' }}>\r\n                      <p style={{ textAlign: 'center' }}>SL</p>\r\n                    </th>\r\n                    <th\r\n                      style={{ textAlign: 'right', border: '1px dashed black' }}\r\n                    >\r\n                      <p>GIÁ</p>\r\n                    </th>\r\n                    <th\r\n                      style={{ textAlign: 'right', border: '1px dashed black' }}\r\n                    >\r\n                      <p>TỔNG</p>\r\n                    </th>\r\n                  </tr>\r\n                  {tempBillData &&\r\n                    tempBillData.map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'left',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.productTitle}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'center',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.quantity}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'right',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.price.toLocaleString()}</p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            textAlign: 'right',\r\n                            border: '1px dashed black',\r\n                          }}\r\n                        >\r\n                          <p>{item.amount.toLocaleString()}</p>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <h4>Giảm giá:</h4>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h4>\r\n                        {Helper.formatCurrencyToVND(paymentData.discountMoney)}\r\n                      </h4>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h4>Phụ thu:</h4>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h4>\r\n                        {Helper.formatCurrencyToVND(paymentData.feesMoney)}\r\n                      </h4>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h3>Tổng tiền:</h3>\r\n                    </td>\r\n                    <td style={{ textAlign: 'right' }}>\r\n                      <h3>\r\n                        {Helper.formatCurrencyToVND(paymentData.totalAmount)}\r\n                      </h3>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div id=\"bot\">\r\n                <div id=\"legalcopy\">\r\n                  <p className=\"legal\">\r\n                    <strong>Cảm ơn Quý Khách, hẹn gặp lại!</strong>&nbsp;\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </iframe>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { LoadingButton } from '@mui/lab'\r\n\r\nimport Iconify from 'components/Iconify'\r\n\r\nimport Swal from 'sweetalert2'\r\nimport 'layouts/sweetalert.css'\r\n\r\nimport { Grid, Container, Typography, Stack, Box } from '@mui/material'\r\n\r\nimport { AUTH, TABLE_STATUS } from 'constants/global'\r\nimport { EnumStatus } from 'constants/EnumStatus'\r\n\r\nimport {\r\n  updateCurrentTable,\r\n  setCurrentTableOrderId,\r\n  emptyCurrentTable,\r\n  setCurrentTableAddItemStatus,\r\n  setDataLoading,\r\n  updateChangeTableStatus,\r\n  updateChangeTableCombineStatus,\r\n  updateTableStatus,\r\n  fetchTablesAndCategoriesData,\r\n  fetchProductsData,\r\n} from 'app/restaurantSlice'\r\n\r\nimport {\r\n  setCurrentOrderItems,\r\n  resetOrderItems,\r\n  getOrderItemsByTableId,\r\n  setTotalAmount,\r\n  setCurrentOrderItem,\r\n  addItemKitchen,\r\n  resetCurrentOrderItems,\r\n  setUpdateOrderItems,\r\n} from 'app/orderItemSlice'\r\n\r\nimport 'layouts/sweetalert.css'\r\n\r\nimport Loading from './loading/Loading'\r\n\r\nimport socketService from 'services/socketService'\r\nimport cashierApi from 'api/cashierApi'\r\n\r\nimport Helper from 'utils/Helper'\r\n\r\nimport AppOrderDetail from './components/AppOrderDetail/AppOrderDetail'\r\nimport MenuBar from './components/MenuBar'\r\nimport ModalOrder from './components/ModalOrder'\r\nimport Footer from './components/Footer'\r\nimport TabTableAndMenu from './components/TabTableAndMenu'\r\nimport BodyTableAndMenu from './components/BodyTableAndMenu'\r\nimport TabOrderItems from './components/TabOrderItems'\r\nimport StaffInfo from './components/StaffInfo'\r\nimport BodyOrderItemsEmpty from './components/BodyOrderItemsEmpty'\r\nimport ModalBill from './components/ModalBill'\r\n\r\nimport { OrderItemStatus } from 'constants/OrderItemStatus'\r\nimport { initTotalAmount, resetPaymentData } from 'app/paymentSlice'\r\nimport { updateTempBillData } from 'app/billSlice'\r\n// ----------------------------------------------------------------------\r\n\r\nconst socket = socketService.connectServer()\r\n\r\nlet ts\r\nlet tableDataObj = {}\r\n\r\nconst accessToken = localStorage.getItem(AUTH.ACCESS_TOKEN)\r\n\r\nexport default function Cashier() {\r\n  const dispatch = useDispatch()\r\n\r\n  const authData = useSelector((state) => state.authData.data)\r\n  const fullName = authData.fullName\r\n\r\n  const baseData = useSelector((state) => state.baseData.data)\r\n\r\n  const resProducts = baseData.products\r\n  const currentTable = baseData.currentTable\r\n  const loadingGlobal = baseData.loading\r\n\r\n  // const [currentTableObj, setCurrentTableObj] = useState(baseData.currentTable)\r\n\r\n  const orderItemData = useSelector((state) => state.orderItemData.data)\r\n  const currentOrderItemsdata = orderItemData.currentOrderItemsdata\r\n  const updateOrderItemsdata = orderItemData.updateOrderItemsdata\r\n  const totalAmount = orderItemData.totalAmount\r\n  // const currentOrderItem = orderItemData.currentOrderItem\r\n\r\n  // console.log(currentOrderItemsdata)\r\n  // console.log(updateOrderItemsdata)\r\n\r\n  // let orderItemsData = []\r\n\r\n  // if (\r\n  //   currentOrderItemsdata !== undefined &&\r\n  //   currentOrderItemsdata !== [] &&\r\n  //   updateOrderItemsdata !== undefined &&\r\n  //   updateOrderItemsdata !== []\r\n  // ) {\r\n  //   orderItemsData = currentOrderItemsdata.concat(updateOrderItemsdata)\r\n  // }\r\n\r\n  // let staffName\r\n\r\n  // const [state, setState] = useState({\r\n  //   erroMessage: '',\r\n  // })\r\n\r\n  const [openModalOrder, setOpenModalOrder] = useState(false)\r\n  const [checkEditModal, setCheckEditModal] = useState(false)\r\n  const [openModalBill, setOpenModalBill] = useState(false)\r\n  const [loadingKitchen, setLoadingKitchen] = useState(false)\r\n  const [loadingPay, setLoadingPay] = useState(false)\r\n  // const [checkTabBill, setCheckTabBill] = useState(false)\r\n\r\n  const [checkTab, setCheckTab] = useState({\r\n    table: true,\r\n    menu: false,\r\n    billHistory: false,\r\n  })\r\n\r\n  // Khởi tạo dữ liệu\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      dispatch(setDataLoading(true))\r\n\r\n      dispatch(fetchTablesAndCategoriesData())\r\n        .unwrap()\r\n        .then(() => {\r\n          dispatch(fetchProductsData())\r\n        })\r\n        .catch(() => {\r\n          toast.warning('Vui lòng kiểm tra kết nối mạng !')\r\n        })\r\n        .finally(() => {\r\n          dispatch(setDataLoading(false))\r\n        })\r\n    }\r\n\r\n    getData()\r\n  }, [])\r\n\r\n  // Tìm sp theo id\r\n  const findProductById = (id) => {\r\n    return resProducts.find((item) => item.productId === id)\r\n  }\r\n\r\n  // Mở ModalOrder\r\n  const handleOpenModalOrder = (productId) => {\r\n    const product = Object.assign({}, findProductById(productId))\r\n\r\n    if (Object.keys(product).length) {\r\n      product.quantity = 1\r\n      product.amount = product.price\r\n      product.note = ''\r\n      product.status = OrderItemStatus.NEW.status\r\n\r\n      const setCurrentOrderItemAction = setCurrentOrderItem(product)\r\n      dispatch(setCurrentOrderItemAction)\r\n\r\n      setOpenModalOrder(true)\r\n    } else {\r\n      toast.error('Không tìm thấy sản phẩm tương ứng')\r\n    }\r\n  }\r\n\r\n  // Ẩn ModalOrder\r\n  const handleCloseMorderOrder = () => {\r\n    setOpenModalOrder(false)\r\n  }\r\n\r\n  // Chuyển qua menu đặt món\r\n  // const showMenu = () => {\r\n  //   currentTable\r\n  //     ? setCheckTab({\r\n  //         ...checkTab,\r\n  //         table: false,\r\n  //         menu: true,\r\n  //         billHistory: false,\r\n  //       })\r\n  //     : toast.warning('Vui lòng chọn bàn !')\r\n  // }\r\n\r\n  // Đóng bàn\r\n  const closeTable = () => {\r\n    tableDataObj = {}\r\n    dispatch(emptyCurrentTable())\r\n    dispatch(resetOrderItems())\r\n    setCheckTab({\r\n      ...checkTab,\r\n      table: true,\r\n      menu: false,\r\n      billHistory: false,\r\n    })\r\n  }\r\n\r\n  // Hiện ModalOrder để update\r\n  const handleOpenEditModal = (orderItem, index) => {\r\n    dispatch(setCurrentOrderItem(orderItem))\r\n    setCheckEditModal(true)\r\n    setOpenModalOrder(true)\r\n  }\r\n\r\n  //Chọn bàn\r\n  const handleSelectTable = async (selectedTable) => {\r\n    if (\r\n      updateOrderItemsdata.length > 0 &&\r\n      selectedTable.id !== currentTable.id\r\n    ) {\r\n      Swal.fire({\r\n        title: `${currentTable.name} đang có những món chưa nhập bếp`,\r\n        text: 'Những món chưa nhập bếp sẽ bị xóa khỏi danh sách chờ',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Đồng ý',\r\n        cancelButtonText: 'Hủy',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          const resetOrderItemAction = resetOrderItems()\r\n          dispatch(resetOrderItemAction)\r\n\r\n          getOrderByTable(selectedTable)\r\n        }\r\n      })\r\n    } else {\r\n      getOrderByTable(selectedTable)\r\n    }\r\n  }\r\n\r\n  // Xem bàn\r\n  const getOrderByTable = async (selectedTable) => {\r\n    dispatch(setDataLoading(true))\r\n\r\n    if (Object.keys(selectedTable).length) {\r\n      try {\r\n        tableDataObj = selectedTable\r\n\r\n        const updateCurrentTableAction = updateCurrentTable(selectedTable)\r\n        dispatch(updateCurrentTableAction)\r\n\r\n        const orderTableRes = await cashierApi.getOrderByTable(selectedTable.id)\r\n\r\n        if (orderTableRes.status === 204) {\r\n          const resetCurrentOrderItemsAction = resetCurrentOrderItems()\r\n          dispatch(resetCurrentOrderItemsAction)\r\n\r\n          const setTableAddItemStatusAction = setCurrentTableAddItemStatus(\r\n            TABLE_STATUS.NEW\r\n          )\r\n          dispatch(setTableAddItemStatusAction)\r\n        } else {\r\n          const setTableAddItemStatusAction = setCurrentTableAddItemStatus(\r\n            TABLE_STATUS.UPDATE\r\n          )\r\n          dispatch(setTableAddItemStatusAction)\r\n\r\n          const setCurrentTableOrderIdAction = setCurrentTableOrderId(\r\n            orderTableRes.data.orderId\r\n          )\r\n          dispatch(setCurrentTableOrderIdAction)\r\n\r\n          const action = setCurrentOrderItems(orderTableRes.data.orderItems)\r\n          dispatch(action)\r\n        }\r\n\r\n        dispatch(setDataLoading(false))\r\n\r\n        setCheckTab({\r\n          ...checkTab,\r\n          table: false,\r\n          menu: true,\r\n          billHistory: false,\r\n        })\r\n      } catch (error) {\r\n        const resetCurrentOrderItemsAction = resetCurrentOrderItems()\r\n        dispatch(resetCurrentOrderItemsAction)\r\n\r\n        const setTableAddItemStatusAction = setCurrentTableAddItemStatus(\r\n          TABLE_STATUS.NEW\r\n        )\r\n        dispatch(setTableAddItemStatusAction)\r\n\r\n        dispatch(setDataLoading(false))\r\n\r\n        toast.error(`Không thể lấy dữ liệu của ${selectedTable.name}`)\r\n      }\r\n    } else {\r\n      toast.error(`Thông tin ${selectedTable.name} không hợp lệ`)\r\n      dispatch(setDataLoading(false))\r\n    }\r\n\r\n    const setTotalAmountAction = setTotalAmount()\r\n    dispatch(setTotalAmountAction)\r\n  }\r\n\r\n  // Mở ModalBill\r\n  const handleOpenBill = async () => {\r\n    if (currentTable === null) {\r\n      toast.error('Vui lòng chọn bàn!')\r\n      return\r\n    }\r\n    if (currentOrderItemsdata.length === 0) {\r\n      toast.error('Vui lòng chọn món trước!')\r\n      return\r\n    }\r\n    if (updateOrderItemsdata.length !== 0) {\r\n      toast.warning('Vui lòng nhập bếp các món ăn vừa thêm!')\r\n      return\r\n    }\r\n\r\n    for (let i = 0; i < currentOrderItemsdata.length; i++) {\r\n      if (currentOrderItemsdata[i].status === OrderItemStatus.COOKING.status) {\r\n        toast.warning('Bàn này đang có món đang nấu')\r\n        return\r\n      }\r\n\r\n      if (currentOrderItemsdata[i].status === OrderItemStatus.WAITER.status) {\r\n        toast.warning('Bàn này đang có món chờ phục vụ')\r\n        return\r\n      }\r\n\r\n      if (\r\n        currentOrderItemsdata[i].status === OrderItemStatus.STOCK_OUT.status\r\n      ) {\r\n        toast.warning('Vui lòng xóa những món đã hết hàng')\r\n        return\r\n      }\r\n    }\r\n\r\n    const setTotalAmountAction = initTotalAmount(orderItemData.totalAmount)\r\n    dispatch(setTotalAmountAction)\r\n\r\n    let billTempData = []\r\n\r\n    currentOrderItemsdata.forEach((orderItem) => {\r\n      if (billTempData.length === 0) {\r\n        let obj = Object.assign({}, orderItem)\r\n        billTempData.push(obj)\r\n      } else {\r\n        let exist = false\r\n        let itemIndex = -1\r\n\r\n        billTempData.forEach((billItem, billIndex) => {\r\n          if (orderItem.productId === billItem.productId) {\r\n            exist = true\r\n            itemIndex = billIndex\r\n          }\r\n        })\r\n\r\n        if (exist) {\r\n          const newQuantity =\r\n            billTempData[itemIndex].quantity + orderItem.quantity\r\n          billTempData[itemIndex].quantity = newQuantity\r\n          billTempData[itemIndex].amount = newQuantity * orderItem.price\r\n        } else {\r\n          let obj = Object.assign({}, orderItem)\r\n          billTempData.push(obj)\r\n        }\r\n\r\n        exist = false\r\n        itemIndex = -1\r\n      }\r\n    })\r\n\r\n    const updateTempBillDataAction = updateTempBillData(billTempData)\r\n    dispatch(updateTempBillDataAction)\r\n\r\n    setOpenModalBill(true)\r\n  }\r\n\r\n  // Đóng ModalBill\r\n  const handleCloseBill = () => {\r\n    setOpenModalBill(false)\r\n\r\n    const action = resetPaymentData()\r\n    dispatch(action)\r\n  }\r\n\r\n  //Nhập bếp\r\n  const handleEnterTheKitchen = () => {\r\n    let obj = {\r\n      tableId: currentTable.id,\r\n      status: currentTable.addItemStatus,\r\n      items: updateOrderItemsdata,\r\n    }\r\n\r\n    setLoadingKitchen(true)\r\n\r\n    dispatch(addItemKitchen(obj))\r\n      .unwrap()\r\n      .then((res) => {\r\n        const newOrder = res.orderWithOrderItemResDTO\r\n        socket.emit('enter-kitchen-success', accessToken, newOrder)\r\n\r\n        const setCurrentOrderItemsAction = setCurrentOrderItems(\r\n          newOrder.orderItems\r\n        )\r\n        dispatch(setCurrentOrderItemsAction)\r\n\r\n        const setUpdateOrderItemsAction = setUpdateOrderItems([])\r\n        dispatch(setUpdateOrderItemsAction)\r\n\r\n        const updateTableStatusAction = updateTableStatus(newOrder)\r\n        dispatch(updateTableStatusAction)\r\n\r\n        if (res.tableCombine) {\r\n          const updateChangeTableCombineStatusAction =\r\n            updateChangeTableCombineStatus(newOrder)\r\n          dispatch(updateChangeTableCombineStatusAction)\r\n        }\r\n\r\n        const setCurrentTableAddItemStatusAction = setCurrentTableAddItemStatus(\r\n          TABLE_STATUS.UPDATE\r\n        )\r\n        dispatch(setCurrentTableAddItemStatusAction)\r\n\r\n        const setCurrentTableOrderIdAction = setCurrentTableOrderId(\r\n          newOrder.orderId\r\n        )\r\n        dispatch(setCurrentTableOrderIdAction)\r\n\r\n        toast.success(`Nhập bếp thành công`)\r\n      })\r\n      .catch(() => {\r\n        toast.error(`Nhập bếp không thành công`)\r\n      })\r\n      .finally(() => {\r\n        setLoadingKitchen(false)\r\n      })\r\n  }\r\n\r\n  socket.on('enter-kitchen-success', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n      const tableId = res.table.id\r\n\r\n      if (tableId === tableDataObj.id) {\r\n        const setCurrentOrderItemsAction = setCurrentOrderItems(res.orderItems)\r\n        dispatch(setCurrentOrderItemsAction)\r\n      }\r\n\r\n      const updateTable = {\r\n        tableId,\r\n        status: EnumStatus.BUSY.status,\r\n        statusValue: EnumStatus.BUSY.statusValue,\r\n      }\r\n      const updateChangeTableStatusAction = updateChangeTableStatus(updateTable)\r\n      dispatch(updateChangeTableStatusAction)\r\n    }\r\n  })\r\n\r\n  socket.on(\r\n    'change-cooking-to-waiter-success-one-product-of-product',\r\n    (res) => {\r\n      if (ts !== res.ts) {\r\n        ts = res.ts\r\n        const tableId = res.tableId\r\n\r\n        if (tableId === tableDataObj.id) {\r\n          getOrderItemsByTable(tableId)\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n  socket.on(\r\n    'change-cooking-to-waiter-success-all-product-of-product',\r\n    (res) => {\r\n      if (ts !== res.ts) {\r\n        ts = res.ts\r\n        if (Object.keys(tableDataObj).length) {\r\n          getOrderItemsByTable(tableDataObj.id)\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n  socket.on('change-cooking-to-waiter-success-all-product-of-table', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n\r\n      if (Object.keys(tableDataObj).length) {\r\n        getOrderItemsByTable(tableDataObj.id)\r\n      }\r\n    }\r\n  })\r\n\r\n  socket.on('change-waiter-to-delivery-success-of-product', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n\r\n      if (Object.keys(tableDataObj).length) {\r\n        getOrderItemsByTable(tableDataObj.id)\r\n      }\r\n    }\r\n  })\r\n\r\n  socket.on('change-cooking-to-waiter-success', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n\r\n      if (res.tableId === tableDataObj.id) {\r\n        getOrderItemsByTable(res.tableId)\r\n      }\r\n    }\r\n  })\r\n\r\n  socket.on('change-waiter-to-delivery-success', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n\r\n      if (res.tableId === tableDataObj.id) {\r\n        getOrderItemsByTable(res.tableId)\r\n      }\r\n    }\r\n  })\r\n\r\n  socket.on('change-cooking-to-stock-out-success', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n\r\n      toast.warning(`${res.tableName} có món hết hàng`)\r\n\r\n      if (res.tableId === tableDataObj.id) {\r\n        getOrderItemsByTable(res.tableId)\r\n      }\r\n    }\r\n  })\r\n\r\n  socket.on('change-waiter-to-stock-out-success', (res) => {\r\n    if (ts !== res.ts) {\r\n      ts = res.ts\r\n\r\n      toast.warning(`${res.tableName} có món hết hàng`)\r\n\r\n      if (res.tableId === tableDataObj.id) {\r\n        getOrderItemsByTable(res.tableId)\r\n      }\r\n    }\r\n  })\r\n\r\n  const getOrderItemsByTable = (tableId) => {\r\n    const getOrderItemsByTableIdAction = getOrderItemsByTableId({ tableId })\r\n    dispatch(getOrderItemsByTableIdAction)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {' '}\r\n        <title> White Lotus | Thu ngân</title>\r\n      </Helmet>\r\n\r\n      {loadingGlobal && <Loading />}\r\n\r\n      <ModalBill\r\n        openModalBill={openModalBill}\r\n        handleCloseBill={handleCloseBill}\r\n        closeTable={closeTable}\r\n      />\r\n\r\n      <ModalOrder\r\n        openModalOrder={openModalOrder}\r\n        handleCloseMorderOrder={handleCloseMorderOrder}\r\n        checkEditModal={checkEditModal}\r\n      />\r\n\r\n      <Container\r\n        maxWidth=\"100%\"\r\n        sx={{\r\n          backgroundColor: '#7266ba',\r\n          height: '100%',\r\n          paddingBottom: '35px',\r\n        }}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={7} md={7} lg={7}>\r\n            <TabTableAndMenu checkTab={checkTab} setCheckTab={setCheckTab} />\r\n\r\n            <BodyTableAndMenu\r\n              checkTab={checkTab}\r\n              setCheckTab={setCheckTab}\r\n              handleOpenModalOrder={handleOpenModalOrder}\r\n              handleSelectTable={handleSelectTable}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={5} md={5} lg={5}>\r\n            <TabOrderItems closeTable={closeTable} />\r\n            <StaffInfo fullName={fullName} />\r\n            <MenuBar />\r\n\r\n            <Box\r\n              style={{\r\n                // height: 430,\r\n                height: '70vh',\r\n                overflow: 'hidden',\r\n                // overflowY: 'scroll',\r\n                padding: '10px',\r\n                backgroundColor: '#F9FAFB',\r\n                borderRadius: '12px 12px 0 0',\r\n              }}\r\n              className=\"wrapperBoard\"\r\n            >\r\n              <Box\r\n                style={{\r\n                  height: '100%',\r\n                  // height: '87vh',\r\n                  overflow: 'auto',\r\n                  overflowY: 'scroll',\r\n                  // padding: 4,\r\n                  backgroundColor: '#0008100a',\r\n                  // borderRadius: '12px',\r\n                }}\r\n                className=\"wrapperBoard\"\r\n              >\r\n                {currentOrderItemsdata.length || updateOrderItemsdata.length ? (\r\n                  <AppOrderDetail\r\n                    handleOpenEditModal={handleOpenEditModal}\r\n                    handleCloseBill={handleCloseBill}\r\n                    closeTable={closeTable}\r\n                  />\r\n                ) : (\r\n                  <BodyOrderItemsEmpty />\r\n                )}\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              style={{\r\n                height: '20vh',\r\n                padding: '10px',\r\n                backgroundColor: '#5b509a',\r\n                borderRadius: '0 0 12px 12px',\r\n              }}\r\n              className=\"wrapperBoard\"\r\n            >\r\n              <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                sx={{\r\n                  padding: '2px 10px',\r\n                  m: '5px 2px',\r\n                  height: '30%',\r\n                }}\r\n              >\r\n                {/* <Stack>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    fontSize: '16px',\r\n                    fontFamily: 'sans-serif',\r\n                  }}\r\n                >\r\n                  Giảm Giá\r\n                </Typography>\r\n                <FilledInput\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    fontSize: '10px',\r\n                  }}\r\n                >\r\n                </FilledInput>\r\n                </Stack> */}\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    fontSize: '16px',\r\n                    fontFamily: 'sans-serif',\r\n                  }}\r\n                >\r\n                  TỔNG TIỀN\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: '#52e96f',\r\n                    fontWeight: 700,\r\n                    fontSize: '18px',\r\n                    fontFamily: 'sans-serif',\r\n                  }}\r\n                >\r\n                  {Helper.formatCurrencyToVND(totalAmount)}\r\n                </Typography>\r\n              </Stack>\r\n              <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                sx={{\r\n                  padding: '2.5% 10px',\r\n                  m: '5px 2px',\r\n                  height: '70%',\r\n                }}\r\n              >\r\n                <LoadingButton\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    color: 'white',\r\n                    backgroundColor: '#0066CC',\r\n                    width: '48%',\r\n                    fontSize: '20px',\r\n                    fontFamily: 'serif',\r\n                    borderRadius: '12px',\r\n                    '&:hover': {\r\n                      backgroundColor: 'white',\r\n                      color: '#d0181b',\r\n                    },\r\n                    cursor: 'pointer',\r\n                    // height: '100%',\r\n                    height: '60px',\r\n                  }}\r\n                  loading={loadingKitchen}\r\n                  onClick={handleEnterTheKitchen}\r\n                  disabled={updateOrderItemsdata.length === 0}\r\n                >\r\n                  <Iconify\r\n                    icon={'ep:dish'}\r\n                    width=\"25px\"\r\n                    height={50}\r\n                    sx={{\r\n                      mr: 1,\r\n                    }}\r\n                  />\r\n                  Nhập bếp\r\n                </LoadingButton>\r\n                <LoadingButton\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    color: 'white',\r\n                    backgroundColor: '#28B44F',\r\n                    width: '48%',\r\n                    fontSize: '20px',\r\n                    fontFamily: 'serif',\r\n                    borderRadius: '12px',\r\n                    '&:hover': {\r\n                      backgroundColor: 'white',\r\n                      color: '#d0181b',\r\n                    },\r\n                    // height: '100%',\r\n                    height: '60px',\r\n                  }}\r\n                  loading={loadingPay}\r\n                  onClick={handleOpenBill}\r\n                  disabled={currentOrderItemsdata.length === 0}\r\n                >\r\n                  <Iconify\r\n                    icon={'ri:money-dollar-circle-line'}\r\n                    width=\"25px\"\r\n                    height={50}\r\n                    sx={{\r\n                      mr: 1,\r\n                    }}\r\n                  />\r\n                  Thanh toán\r\n                </LoadingButton>\r\n              </Stack>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport 'features/Cashier/loading/Loading.scss'\r\n\r\nimport Images from 'constants/images'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"bg-loading hide\">\r\n      <div className=\"lds-ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <img src={Images.LOADING_LOGO} alt=\"logo\" className=\"loading-logo\" />\r\n    </div>\r\n  )\r\n}\r\nexport default Loading\r\n","import { SOCKET_SERVER } from 'constants/global'\r\nimport socketIOClient from 'socket.io-client'\r\n\r\nlet socket\r\n\r\nconst socketService = {\r\n  connectServer: () => {\r\n    socket = socketIOClient(SOCKET_SERVER)\r\n    socket.emit('create-room', 'White-Lotus')\r\n    return socket\r\n  },\r\n}\r\n\r\nexport default socketService\r\n","const Helper = {\r\n  formatCurrencyToVND: (number) => {\r\n    return new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n    }).format(Number(number))\r\n  },\r\n  getFilename: (fileUrl) => {\r\n    return fileUrl.split('/').pop().split('.')[0]\r\n  },\r\n  countTime: (timeA, timeB) => {\r\n    let result\r\n    const c = parseInt((timeA - timeB) / (1000 * 60), 10)\r\n    if (c <= 0) {\r\n      result = 'vài giây trước'\r\n    } else if (c < 60) {\r\n      result = `${c} phút trước`\r\n    } else {\r\n      const d = parseInt((timeA - timeB) / (1000 * 60 * 60), 10)\r\n      result = `${d} giờ trước`\r\n    }\r\n    return result\r\n  },\r\n  formatDate: (date) => {\r\n    const yyyy = date.getFullYear();\r\n    let mm = date.getMonth() + 1; // Months start at 0!\r\n    let dd = date.getDate();\r\n\r\n    if (dd < 10) dd = '0' + dd;\r\n    if (mm < 10) mm = '0' + mm;\r\n\r\n    const formattedToday = dd + '-' + mm + '-' + yyyy;\r\n    return formattedToday\r\n  }\r\n}\r\n\r\nexport default Helper\r\n"],"names":["Iconify","forwardRef","_ref","ref","icon","_ref$width","width","sx","other","_objectWithoutProperties","_excluded","_jsx","Box","_objectSpread","component","Icon","height","propTypes","PropTypes","LOGIN_LOGO","LOADING_LOGO","NOT_FOUND","Footer","textAlign","paddingTop","position","backgroundColor","bottom","children","_jsxs","Stack","direction","alignItems","justifyContent","color","mr","Typography","fontFamily","fontSize","ml","StaffInfo","fullName","Button","variant","mt","right","borderRadius","boxShadow","OrderItemStatus","Object","freeze","NEW","status","statusValue","UPDATE","COOKING","WAITER","DELIVERY","STOCK_OUT","DONE","StyledProductImg","styled","top","objectFit","OrderItemAvatar","orderItem","index","handleOpenEditModal","Grid","item","xs","md","lg","pt","alt","productTitle","src","COUDINARY","productAvatar","fileFolder","fileName","OrderItemInfoNEW","handleChangeQuantity","handleDecreaseQuantity","handleIncreaseQuantity","_Fragment","id","lineHeight","textTransform","fontWeight","concat","Helper","price","TextField","value","quantity","disabled","InputProps","disableUnderline","inputProps","pattern","input","padding","onChange","e","amount","cursor","maxWidth","minWidth","maxHeight","minHeight","border","onClick","note","OrderItemInfoOTHER","DeleteOrderItem","handleClickDeleteItem","bgcolor","DeleteOrderItemStockOut","handleClickDeleteItemStockOut","style","marginBottom","styleReadonly","AppOrderDetail","dispatch","handleCloseBill","closeTable","useDispatch","orderItemData","useSelector","state","baseData","data","currentTable","currentOrderItemsdata","updateOrderItemsdata","orderItemsData","decreaseQuantityOrderItem","setTotalAmount","increaseQuantityOrderItem","target","Number","Swal","customClass","title","fire","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","handleDeleteOrderItem","toast","indexInOrderItems","deleteUpdateOrderItem","obj","orderItemId","deleteItemStockOut","unwrap","length","map","container","spacing","MenuBar","_useState","useState","_useState2","_slicedToArray","open","setOpen","navigate","useNavigate","handleOpenMenu","event","currentTarget","Boolean","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","px","typography","MenuItem","localStorage","removeItem","AUTH","action","clearData","ModalOrder","openModalOrder","handleCloseMorderOrder","checkEditModal","currentOrderItem","keys","ModalComponent","_ref2","handleOrderProduct","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","updateItem","addItem","stop","apply","arguments","Modal","closeAfterTransition","disableAutoFocus","Fade","in","left","transform","description","Divider","mb","size","changeQuantityCurrentOrderItem","decreaseQuantityCurrentOrderItemAction","decreaseQuantityCurrentOrderItem","increaseQuantityCurrentOrderItemAction","increaseQuantityCurrentOrderItem","unitTitle","label","setNoteCurrentOrderItem","active","deActive","TabTableAndMenu","checkTab","setCheckTab","table","menu","billHistory","Toolbar","display","theme","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","customShadows","z8","borderWidth","borderColor","alpha","palette","grey","AppSearchProduct","categories","keyword","handleChangeCategory","onFilterName","doSearch","className","marginLeft","type","placeholder","cate","ModalChangeTable","openModalChangeTable","emptyTable","selectTable","handleCloseModal","handleSelectTableChange","handleChangeTable","Card","CardContent","Paper","py","paddingBottom","background","pb","name","margin","gap","gridTemplateColumns","borderBottom","opacity","ModalMergeTable","openModalMergeTable","currentTableId","currentTableName","targetTableId","targetTableName","loadingCombine","setState","restaurantsData","busyTable","tables","filter","EnumStatus","tableId","tableName","LoadingButton","loading","targetId","targetName","currentName","CombineTable","catch","error","message","response","finally","handleClickCombineTable","AppTablesList","handleSelectTable","subheader","openMenuTable","setOpenMenuTable","_useState3","_useState4","setCheckOpenMenuTable","_useState5","_useState6","setOpenModalChangeTable","_useState7","_useState8","setOpenModalMergeTable","_useState9","_useState10","setCurrentTable","_useState11","_useState12","setSelectTable","handleOpenMenuTable","Tooltip","UnCombineTable","handleClickUnCombineTable","closeCurrentTable","oldTableId","newTableId","setDataLoading","changeTable","oldTable","newTable","updateChangeTableStatus","LightTooltip","props","classes","popper","_defineProperty","tooltipClasses","common","white","shadows","AppProductList","_ref4","productsSearch","handleOpenModalOrder","checkSearchEmpty","_excluded2","productsData","products","productsSearchData","sm","outStock","zIndex","flexDirection","product","text","confirmButtonColor","cancelButtonColor","restoreOutStockProduct","productId","placement","setOutStockProduct","pl","pr","noWrap","BillStatus","ORDERING","TEMPORARY","CANCEL","PAID","ModalDetailBill","openModalBillHistory","closeModalBillHistory","currentBill","currenrOrderitemsBill","createdAt","staffName","overflow","orderPrice","chargePercent","chargeMoney","discountPercent","discountMoney","totalAmount","setTimeout","content","document","getElementById","pri","contentWindow","write","innerHTML","close","focus","print","Images","Date","colSpan","toLocaleTimeString","borderCollapse","toLocaleString","AppBillHistoryList","currentDay","previousDay","setOpenModalBillHistory","useEffect","current","previous","getTime","setDate","getDate","getDay","erroMessage","listBillToday","listBillPreviousDay","listBillShow","billDayValue","updateListBillShow","getBillsByDay","bill","getOrderItemsByOrderId","orderId","orderItems","updateCurrenrOrderitemsBill","updateCurrentBill","BodyTableAndMenu","checkMenu","productList","categoryId","setCheckSearchEmpty","handleSearch","toUpperCase","includes","category","setProductsSearch","_x","_callee2","_context2","_x2","marginTop","TabOrderItems","orderTable","BodyOrderItemsEmpty","StyledTableCell","TableCell","tableCellClasses","black","paddingRight","paddingLeft","StyledTableRow","TableRow","hover","ModalBill","openModalBill","authData","paymentData","billData","tempBillData","currentOrderItemsDONE","forEach","push","setLoadingPrintBillTemp","setLoadingPayBill","handlePayTemp","_ref5","console","log","BackdropComponent","Backdrop","BackdropProps","timeout","Slide","my","TableContainer","Table","TableHead","align","TableBody","scope","NumericFormat","thousandSeparator","customInput","readOnly","isAllowed","values","formattedValue","floatValue","Input","onInput","discount","receivedCashMoney","receivedTransferMoney","totalPrice","setDiscountAction","setDiscount","updateTotalAmountAction","updateTotalAmount","setChangeMoneyAction","setChangeMoney","fees","setFeesAction","setFees","replaceAll","setReceivedCashMoneyAction","setReceivedCashMoney","setReceivedTransferMoneyAction","setReceivedTransferMoney","changeMoney","feesMoney","payBill","objTable","updateTableStatusAction","prototype","openBill","ts","socket","socketService","tableDataObj","accessToken","getItem","Cashier","resProducts","loadingGlobal","setOpenModalOrder","setCheckEditModal","setOpenModalBill","loadingKitchen","setLoadingKitchen","loadingPay","fetchTablesAndCategoriesData","fetchProductsData","emptyCurrentTable","resetOrderItems","selectedTable","resetOrderItemAction","getOrderByTable","updateCurrentTableAction","orderTableRes","resetCurrentOrderItemsAction","setTableAddItemStatusAction","_setTableAddItemStatusAction","setCurrentTableOrderIdAction","_resetCurrentOrderItemsAction","_setTableAddItemStatusAction2","setTotalAmountAction","updateCurrentTable","cashierApi","sent","resetCurrentOrderItems","setCurrentTableAddItemStatus","TABLE_STATUS","setCurrentTableOrderId","setCurrentOrderItems","t0","handleOpenBill","_callee3","i","billTempData","updateTempBillDataAction","_context3","abrupt","initTotalAmount","assign","exist","itemIndex","billItem","billIndex","newQuantity","updateTempBillData","resetPaymentData","on","res","setCurrentOrderItemsAction","updateTable","updateChangeTableStatusAction","getOrderItemsByTable","getOrderItemsByTableIdAction","getOrderItemsByTableId","Helmet","Loading","Container","find","setCurrentOrderItemAction","setCurrentOrderItem","overflowY","m","addItemStatus","items","addItemKitchen","newOrder","orderWithOrderItemResDTO","emit","setUpdateOrderItemsAction","setUpdateOrderItems","updateTableStatus","tableCombine","updateChangeTableCombineStatusAction","updateChangeTableCombineStatus","setCurrentTableAddItemStatusAction","connectServer","socketIOClient","SOCKET_SERVER","formatCurrencyToVND","number","Intl","NumberFormat","currency","format","getFilename","fileUrl","split","pop","countTime","timeA","timeB","c","parseInt","d","formatDate","date","yyyy","getFullYear","mm","getMonth","dd"],"sourceRoot":""}